# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/target/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/vsprog
pkgincludedir = $(includedir)/vsprog
pkglibdir = $(libdir)/vsprog
pkglibexecdir = $(libexecdir)/vsprog
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
subdir = src/target
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libtgt_a_AR = $(AR) $(ARFLAGS)
libtgt_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libtgt_a_OBJECTS = target.$(OBJEXT) target_conf.$(OBJEXT) \
	target_data.$(OBJEXT) core/arm_adi/adi_v5p1.$(OBJEXT) \
	cortex-m/cm.$(OBJEXT) cortex-m/cm_stm32_fl.$(OBJEXT) \
	cortex-m/cm_stm32f1.$(OBJEXT) cortex-m/cm_stm32f2.$(OBJEXT) \
	cortex-m/cm_stm32l1.$(OBJEXT) cortex-m/cm_lpc1000.$(OBJEXT) \
	cortex-m/cm_at91sam3.$(OBJEXT) cortex-m/cm_lm3s.$(OBJEXT) \
	cortex-m/cm_nuc100.$(OBJEXT) cortex-m/cm_nuc400.$(OBJEXT) \
	cortex-m/cm_kinetis.$(OBJEXT) cortex-m/cm_common.$(OBJEXT) \
	at89s5x/at89s5x.$(OBJEXT) avr8/avr8.$(OBJEXT) \
	avr8/avr8_hvpp.$(OBJEXT) avr8/avr8_hvsp.$(OBJEXT) \
	avr8/avr8_isp.$(OBJEXT) avr8/avr8_jtag.$(OBJEXT) \
	lpc900/lpc900.$(OBJEXT) c8051f/c8051f.$(OBJEXT) \
	c8051f/c8051f_c2.$(OBJEXT) c8051f/c8051f_jtag.$(OBJEXT) \
	comisp/comisp.$(OBJEXT) comisp/lpcarmisp.$(OBJEXT) \
	comisp/stm32isp.$(OBJEXT) msp430/JTAGfunc.$(OBJEXT) \
	msp430/msp430.$(OBJEXT) msp430/msp430_jtagsbw.$(OBJEXT) \
	msp430/msp430_bsl.$(OBJEXT) psoc1/psoc1.$(OBJEXT) \
	stm8/stm8.$(OBJEXT) svf_player/svf_player.$(OBJEXT) \
	svf_player/byte_tap.$(OBJEXT) svf_player/svf_parser.$(OBJEXT) \
	stm32f1/stm32f1.$(OBJEXT) stm32f2/stm32f2.$(OBJEXT) \
	stm32l1/stm32l1.$(OBJEXT) lpc1000/lpc1000.$(OBJEXT) \
	at91sam3/at91sam3.$(OBJEXT) nuc100/nuc100.$(OBJEXT) \
	nuc400/nuc400.$(OBJEXT) kinetis/kinetis.$(OBJEXT) \
	avr32/avr32.$(OBJEXT) avrxmega/avrxmega.$(OBJEXT) \
	lm3s/lm3s.$(OBJEXT) hcs08/hcs08.$(OBJEXT) \
	hcs12/hcs12.$(OBJEXT) ee93cx6/ee93cx6.$(OBJEXT) \
	ee24cxx/ee24cxx.$(OBJEXT) df25xx/df25xx.$(OBJEXT) \
	sd/sd.$(OBJEXT) cfi/cfi.$(OBJEXT) nand/nand.$(OBJEXT) \
	sst32hfxx/sst32hfxx.$(OBJEXT)
libtgt_a_OBJECTS = $(am_libtgt_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/target.Po ./$(DEPDIR)/target_conf.Po \
	./$(DEPDIR)/target_data.Po at89s5x/$(DEPDIR)/at89s5x.Po \
	at91sam3/$(DEPDIR)/at91sam3.Po avr32/$(DEPDIR)/avr32.Po \
	avr8/$(DEPDIR)/avr8.Po avr8/$(DEPDIR)/avr8_hvpp.Po \
	avr8/$(DEPDIR)/avr8_hvsp.Po avr8/$(DEPDIR)/avr8_isp.Po \
	avr8/$(DEPDIR)/avr8_jtag.Po avrxmega/$(DEPDIR)/avrxmega.Po \
	c8051f/$(DEPDIR)/c8051f.Po c8051f/$(DEPDIR)/c8051f_c2.Po \
	c8051f/$(DEPDIR)/c8051f_jtag.Po cfi/$(DEPDIR)/cfi.Po \
	comisp/$(DEPDIR)/comisp.Po comisp/$(DEPDIR)/lpcarmisp.Po \
	comisp/$(DEPDIR)/stm32isp.Po \
	core/arm_adi/$(DEPDIR)/adi_v5p1.Po cortex-m/$(DEPDIR)/cm.Po \
	cortex-m/$(DEPDIR)/cm_at91sam3.Po \
	cortex-m/$(DEPDIR)/cm_common.Po \
	cortex-m/$(DEPDIR)/cm_kinetis.Po cortex-m/$(DEPDIR)/cm_lm3s.Po \
	cortex-m/$(DEPDIR)/cm_lpc1000.Po \
	cortex-m/$(DEPDIR)/cm_nuc100.Po \
	cortex-m/$(DEPDIR)/cm_nuc400.Po \
	cortex-m/$(DEPDIR)/cm_stm32_fl.Po \
	cortex-m/$(DEPDIR)/cm_stm32f1.Po \
	cortex-m/$(DEPDIR)/cm_stm32f2.Po \
	cortex-m/$(DEPDIR)/cm_stm32l1.Po df25xx/$(DEPDIR)/df25xx.Po \
	ee24cxx/$(DEPDIR)/ee24cxx.Po ee93cx6/$(DEPDIR)/ee93cx6.Po \
	hcs08/$(DEPDIR)/hcs08.Po hcs12/$(DEPDIR)/hcs12.Po \
	kinetis/$(DEPDIR)/kinetis.Po lm3s/$(DEPDIR)/lm3s.Po \
	lpc1000/$(DEPDIR)/lpc1000.Po lpc900/$(DEPDIR)/lpc900.Po \
	msp430/$(DEPDIR)/JTAGfunc.Po msp430/$(DEPDIR)/msp430.Po \
	msp430/$(DEPDIR)/msp430_bsl.Po \
	msp430/$(DEPDIR)/msp430_jtagsbw.Po nand/$(DEPDIR)/nand.Po \
	nuc100/$(DEPDIR)/nuc100.Po nuc400/$(DEPDIR)/nuc400.Po \
	psoc1/$(DEPDIR)/psoc1.Po sd/$(DEPDIR)/sd.Po \
	sst32hfxx/$(DEPDIR)/sst32hfxx.Po stm32f1/$(DEPDIR)/stm32f1.Po \
	stm32f2/$(DEPDIR)/stm32f2.Po stm32l1/$(DEPDIR)/stm32l1.Po \
	stm8/$(DEPDIR)/stm8.Po svf_player/$(DEPDIR)/byte_tap.Po \
	svf_player/$(DEPDIR)/svf_parser.Po \
	svf_player/$(DEPDIR)/svf_player.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libtgt_a_SOURCES)
DIST_SOURCES = $(libtgt_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/maddocks/versaloon-git/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/maddocks/versaloon-git/missing autoconf
AUTOHEADER = ${SHELL} /home/maddocks/versaloon-git/missing autoheader
AUTOMAKE = ${SHELL} /home/maddocks/versaloon-git/missing automake-1.16
AWK = gawk
CC = ccache gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wstrict-prototypes -Wformat=0 -Wno-unused-parameter -Wno-missing-field-initializers -Wextra -Wbad-function-cast -Wcast-align -Wredundant-decls -I/usr/include/libxml2
CPP = ccache gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
EXEEXT_FOR_BUILD = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = 
MAKEINFO = ${SHELL} /home/maddocks/versaloon-git/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = vsprog
PACKAGE_BUGREPORT = VSProg Mailling List <Versaloon-development@simonqian.com>
PACKAGE_NAME = vsprog
PACKAGE_STRING = vsprog 1.1
PACKAGE_TARNAME = vsprog
PACKAGE_URL = 
PACKAGE_VERSION = 1.1
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.1
XML2_CONFIG = /usr/bin/xml2-config
XML_CPPFLAGS = -I/usr/include/libxml2
XML_LIBS = -lxml2
abs_builddir = /home/maddocks/versaloon-git/src/target
abs_srcdir = /home/maddocks/versaloon-git/src/target
abs_top_builddir = /home/maddocks/versaloon-git
abs_top_srcdir = /home/maddocks/versaloon-git
ac_ct_AR = ar
ac_ct_CC = ccache gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/maddocks/versaloon-git/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AUTOMAKE_OPTIONS = subdir-objects
INCLUDES = \
    $(all_includes) \
    -I$(top_srcdir)/src/vsf_cfg \
    -I$(top_srcdir)/vsf \
    -I$(top_srcdir)/vsf/compiler/GCC \
    -I$(top_srcdir)/vsf/interfaces/cpu/pc \
    -I$(top_srcdir)/vsf/tool/list \
    -I$(top_srcdir)/src \
    -I$(top_srcdir)/src/programmer \
    -I$(top_srcdir)/src/programmer/interfaces \
    -I$(top_srcdir)/src/tools/memlist \
    -I$(top_srcdir)/src/tools/filelist \
    -I$(top_srcdir)/src/tools/fileparser \
    -I$(top_srcdir)/src/tools/pgbar \
    -I$(top_srcdir)/src/tools/strparser \
    -I$(top_srcdir)/src/tools/bufffunc \
    -I$(top_srcdir)/src/driver \
    -I$(top_srcdir)/src/driver/comport \
    -I$(top_srcdir)/src/target/core/arm_adi \
    -I$(top_srcdir)/src/target/comisp \
    -I$(top_srcdir)/src/target/cortex-m \
    -I$(top_srcdir)/src/target/stm32f1 \
    -I$(top_srcdir)/src/target/stm32f2 \
    -I$(top_srcdir)/src/target/stm32l1 \
    -I$(top_srcdir)/src/target/lpc1000 \
    -I$(top_srcdir)/src/target/at91sam3 \
    -I$(top_srcdir)/src/target/nuc100 \
    -I$(top_srcdir)/src/target/nuc400 \
    -I$(top_srcdir)/src/target/kinetis \
    -I$(top_srcdir)/src/target/avr32 \
    -I$(top_srcdir)/src/target/avrxmega \
    -I$(top_srcdir)/src/target/lm3s \
    -I$(top_srcdir)/src/target/sd \
    -I$(top_srcdir)/src/scripts \
    -I$(top_srcdir)/src/vsf

METASOURCES = AUTO
noinst_LIBRARIES = libtgt.a
libtgt_a_SOURCES = \
    target.c \
    target_conf.c \
    target_data.c \
    core/arm_adi/adi_v5p1.c \
    cortex-m/cm.c \
    cortex-m/cm_stm32_fl.c \
    cortex-m/cm_stm32f1.c \
    cortex-m/cm_stm32f2.c \
    cortex-m/cm_stm32l1.c \
    cortex-m/cm_lpc1000.c \
    cortex-m/cm_at91sam3.c \
    cortex-m/cm_lm3s.c \
    cortex-m/cm_nuc100.c \
    cortex-m/cm_nuc400.c \
    cortex-m/cm_kinetis.c \
    cortex-m/cm_common.c \
    at89s5x/at89s5x.c \
    avr8/avr8.c \
    avr8/avr8_hvpp.c \
    avr8/avr8_hvsp.c \
    avr8/avr8_isp.c \
    avr8/avr8_jtag.c \
    lpc900/lpc900.c \
    c8051f/c8051f.c \
    c8051f/c8051f_c2.c \
    c8051f/c8051f_jtag.c \
    comisp/comisp.c \
    comisp/lpcarmisp.c \
    comisp/stm32isp.c \
    msp430/JTAGfunc.c \
    msp430/msp430.c \
    msp430/msp430_jtagsbw.c \
    msp430/msp430_bsl.c \
    psoc1/psoc1.c \
    stm8/stm8.c \
    svf_player/svf_player.c \
    svf_player/byte_tap.c \
    svf_player/svf_parser.c \
    stm32f1/stm32f1.c \
    stm32f2/stm32f2.c \
    stm32l1/stm32l1.c \
    lpc1000/lpc1000.c \
    at91sam3/at91sam3.c \
    nuc100/nuc100.c \
    nuc400/nuc400.c \
    kinetis/kinetis.c \
    avr32/avr32.c \
    avrxmega/avrxmega.c \
    lm3s/lm3s.c \
    hcs08/hcs08.c \
    hcs12/hcs12.c \
    ee93cx6/ee93cx6.c \
    ee24cxx/ee24cxx.c \
    df25xx/df25xx.c \
    sd/sd.c \
    cfi/cfi.c \
    nand/nand.c \
    sst32hfxx/sst32hfxx.c

MAINTAINERCLEANFILES = Makefile.in
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/target/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/target/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
core/arm_adi/$(am__dirstamp):
	@$(MKDIR_P) core/arm_adi
	@: > core/arm_adi/$(am__dirstamp)
core/arm_adi/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) core/arm_adi/$(DEPDIR)
	@: > core/arm_adi/$(DEPDIR)/$(am__dirstamp)
core/arm_adi/adi_v5p1.$(OBJEXT): core/arm_adi/$(am__dirstamp) \
	core/arm_adi/$(DEPDIR)/$(am__dirstamp)
cortex-m/$(am__dirstamp):
	@$(MKDIR_P) cortex-m
	@: > cortex-m/$(am__dirstamp)
cortex-m/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cortex-m/$(DEPDIR)
	@: > cortex-m/$(DEPDIR)/$(am__dirstamp)
cortex-m/cm.$(OBJEXT): cortex-m/$(am__dirstamp) \
	cortex-m/$(DEPDIR)/$(am__dirstamp)
cortex-m/cm_stm32_fl.$(OBJEXT): cortex-m/$(am__dirstamp) \
	cortex-m/$(DEPDIR)/$(am__dirstamp)
cortex-m/cm_stm32f1.$(OBJEXT): cortex-m/$(am__dirstamp) \
	cortex-m/$(DEPDIR)/$(am__dirstamp)
cortex-m/cm_stm32f2.$(OBJEXT): cortex-m/$(am__dirstamp) \
	cortex-m/$(DEPDIR)/$(am__dirstamp)
cortex-m/cm_stm32l1.$(OBJEXT): cortex-m/$(am__dirstamp) \
	cortex-m/$(DEPDIR)/$(am__dirstamp)
cortex-m/cm_lpc1000.$(OBJEXT): cortex-m/$(am__dirstamp) \
	cortex-m/$(DEPDIR)/$(am__dirstamp)
cortex-m/cm_at91sam3.$(OBJEXT): cortex-m/$(am__dirstamp) \
	cortex-m/$(DEPDIR)/$(am__dirstamp)
cortex-m/cm_lm3s.$(OBJEXT): cortex-m/$(am__dirstamp) \
	cortex-m/$(DEPDIR)/$(am__dirstamp)
cortex-m/cm_nuc100.$(OBJEXT): cortex-m/$(am__dirstamp) \
	cortex-m/$(DEPDIR)/$(am__dirstamp)
cortex-m/cm_nuc400.$(OBJEXT): cortex-m/$(am__dirstamp) \
	cortex-m/$(DEPDIR)/$(am__dirstamp)
cortex-m/cm_kinetis.$(OBJEXT): cortex-m/$(am__dirstamp) \
	cortex-m/$(DEPDIR)/$(am__dirstamp)
cortex-m/cm_common.$(OBJEXT): cortex-m/$(am__dirstamp) \
	cortex-m/$(DEPDIR)/$(am__dirstamp)
at89s5x/$(am__dirstamp):
	@$(MKDIR_P) at89s5x
	@: > at89s5x/$(am__dirstamp)
at89s5x/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) at89s5x/$(DEPDIR)
	@: > at89s5x/$(DEPDIR)/$(am__dirstamp)
at89s5x/at89s5x.$(OBJEXT): at89s5x/$(am__dirstamp) \
	at89s5x/$(DEPDIR)/$(am__dirstamp)
avr8/$(am__dirstamp):
	@$(MKDIR_P) avr8
	@: > avr8/$(am__dirstamp)
avr8/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) avr8/$(DEPDIR)
	@: > avr8/$(DEPDIR)/$(am__dirstamp)
avr8/avr8.$(OBJEXT): avr8/$(am__dirstamp) \
	avr8/$(DEPDIR)/$(am__dirstamp)
avr8/avr8_hvpp.$(OBJEXT): avr8/$(am__dirstamp) \
	avr8/$(DEPDIR)/$(am__dirstamp)
avr8/avr8_hvsp.$(OBJEXT): avr8/$(am__dirstamp) \
	avr8/$(DEPDIR)/$(am__dirstamp)
avr8/avr8_isp.$(OBJEXT): avr8/$(am__dirstamp) \
	avr8/$(DEPDIR)/$(am__dirstamp)
avr8/avr8_jtag.$(OBJEXT): avr8/$(am__dirstamp) \
	avr8/$(DEPDIR)/$(am__dirstamp)
lpc900/$(am__dirstamp):
	@$(MKDIR_P) lpc900
	@: > lpc900/$(am__dirstamp)
lpc900/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) lpc900/$(DEPDIR)
	@: > lpc900/$(DEPDIR)/$(am__dirstamp)
lpc900/lpc900.$(OBJEXT): lpc900/$(am__dirstamp) \
	lpc900/$(DEPDIR)/$(am__dirstamp)
c8051f/$(am__dirstamp):
	@$(MKDIR_P) c8051f
	@: > c8051f/$(am__dirstamp)
c8051f/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) c8051f/$(DEPDIR)
	@: > c8051f/$(DEPDIR)/$(am__dirstamp)
c8051f/c8051f.$(OBJEXT): c8051f/$(am__dirstamp) \
	c8051f/$(DEPDIR)/$(am__dirstamp)
c8051f/c8051f_c2.$(OBJEXT): c8051f/$(am__dirstamp) \
	c8051f/$(DEPDIR)/$(am__dirstamp)
c8051f/c8051f_jtag.$(OBJEXT): c8051f/$(am__dirstamp) \
	c8051f/$(DEPDIR)/$(am__dirstamp)
comisp/$(am__dirstamp):
	@$(MKDIR_P) comisp
	@: > comisp/$(am__dirstamp)
comisp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) comisp/$(DEPDIR)
	@: > comisp/$(DEPDIR)/$(am__dirstamp)
comisp/comisp.$(OBJEXT): comisp/$(am__dirstamp) \
	comisp/$(DEPDIR)/$(am__dirstamp)
comisp/lpcarmisp.$(OBJEXT): comisp/$(am__dirstamp) \
	comisp/$(DEPDIR)/$(am__dirstamp)
comisp/stm32isp.$(OBJEXT): comisp/$(am__dirstamp) \
	comisp/$(DEPDIR)/$(am__dirstamp)
msp430/$(am__dirstamp):
	@$(MKDIR_P) msp430
	@: > msp430/$(am__dirstamp)
msp430/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) msp430/$(DEPDIR)
	@: > msp430/$(DEPDIR)/$(am__dirstamp)
msp430/JTAGfunc.$(OBJEXT): msp430/$(am__dirstamp) \
	msp430/$(DEPDIR)/$(am__dirstamp)
msp430/msp430.$(OBJEXT): msp430/$(am__dirstamp) \
	msp430/$(DEPDIR)/$(am__dirstamp)
msp430/msp430_jtagsbw.$(OBJEXT): msp430/$(am__dirstamp) \
	msp430/$(DEPDIR)/$(am__dirstamp)
msp430/msp430_bsl.$(OBJEXT): msp430/$(am__dirstamp) \
	msp430/$(DEPDIR)/$(am__dirstamp)
psoc1/$(am__dirstamp):
	@$(MKDIR_P) psoc1
	@: > psoc1/$(am__dirstamp)
psoc1/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) psoc1/$(DEPDIR)
	@: > psoc1/$(DEPDIR)/$(am__dirstamp)
psoc1/psoc1.$(OBJEXT): psoc1/$(am__dirstamp) \
	psoc1/$(DEPDIR)/$(am__dirstamp)
stm8/$(am__dirstamp):
	@$(MKDIR_P) stm8
	@: > stm8/$(am__dirstamp)
stm8/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) stm8/$(DEPDIR)
	@: > stm8/$(DEPDIR)/$(am__dirstamp)
stm8/stm8.$(OBJEXT): stm8/$(am__dirstamp) \
	stm8/$(DEPDIR)/$(am__dirstamp)
svf_player/$(am__dirstamp):
	@$(MKDIR_P) svf_player
	@: > svf_player/$(am__dirstamp)
svf_player/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) svf_player/$(DEPDIR)
	@: > svf_player/$(DEPDIR)/$(am__dirstamp)
svf_player/svf_player.$(OBJEXT): svf_player/$(am__dirstamp) \
	svf_player/$(DEPDIR)/$(am__dirstamp)
svf_player/byte_tap.$(OBJEXT): svf_player/$(am__dirstamp) \
	svf_player/$(DEPDIR)/$(am__dirstamp)
svf_player/svf_parser.$(OBJEXT): svf_player/$(am__dirstamp) \
	svf_player/$(DEPDIR)/$(am__dirstamp)
stm32f1/$(am__dirstamp):
	@$(MKDIR_P) stm32f1
	@: > stm32f1/$(am__dirstamp)
stm32f1/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) stm32f1/$(DEPDIR)
	@: > stm32f1/$(DEPDIR)/$(am__dirstamp)
stm32f1/stm32f1.$(OBJEXT): stm32f1/$(am__dirstamp) \
	stm32f1/$(DEPDIR)/$(am__dirstamp)
stm32f2/$(am__dirstamp):
	@$(MKDIR_P) stm32f2
	@: > stm32f2/$(am__dirstamp)
stm32f2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) stm32f2/$(DEPDIR)
	@: > stm32f2/$(DEPDIR)/$(am__dirstamp)
stm32f2/stm32f2.$(OBJEXT): stm32f2/$(am__dirstamp) \
	stm32f2/$(DEPDIR)/$(am__dirstamp)
stm32l1/$(am__dirstamp):
	@$(MKDIR_P) stm32l1
	@: > stm32l1/$(am__dirstamp)
stm32l1/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) stm32l1/$(DEPDIR)
	@: > stm32l1/$(DEPDIR)/$(am__dirstamp)
stm32l1/stm32l1.$(OBJEXT): stm32l1/$(am__dirstamp) \
	stm32l1/$(DEPDIR)/$(am__dirstamp)
lpc1000/$(am__dirstamp):
	@$(MKDIR_P) lpc1000
	@: > lpc1000/$(am__dirstamp)
lpc1000/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) lpc1000/$(DEPDIR)
	@: > lpc1000/$(DEPDIR)/$(am__dirstamp)
lpc1000/lpc1000.$(OBJEXT): lpc1000/$(am__dirstamp) \
	lpc1000/$(DEPDIR)/$(am__dirstamp)
at91sam3/$(am__dirstamp):
	@$(MKDIR_P) at91sam3
	@: > at91sam3/$(am__dirstamp)
at91sam3/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) at91sam3/$(DEPDIR)
	@: > at91sam3/$(DEPDIR)/$(am__dirstamp)
at91sam3/at91sam3.$(OBJEXT): at91sam3/$(am__dirstamp) \
	at91sam3/$(DEPDIR)/$(am__dirstamp)
nuc100/$(am__dirstamp):
	@$(MKDIR_P) nuc100
	@: > nuc100/$(am__dirstamp)
nuc100/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) nuc100/$(DEPDIR)
	@: > nuc100/$(DEPDIR)/$(am__dirstamp)
nuc100/nuc100.$(OBJEXT): nuc100/$(am__dirstamp) \
	nuc100/$(DEPDIR)/$(am__dirstamp)
nuc400/$(am__dirstamp):
	@$(MKDIR_P) nuc400
	@: > nuc400/$(am__dirstamp)
nuc400/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) nuc400/$(DEPDIR)
	@: > nuc400/$(DEPDIR)/$(am__dirstamp)
nuc400/nuc400.$(OBJEXT): nuc400/$(am__dirstamp) \
	nuc400/$(DEPDIR)/$(am__dirstamp)
kinetis/$(am__dirstamp):
	@$(MKDIR_P) kinetis
	@: > kinetis/$(am__dirstamp)
kinetis/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) kinetis/$(DEPDIR)
	@: > kinetis/$(DEPDIR)/$(am__dirstamp)
kinetis/kinetis.$(OBJEXT): kinetis/$(am__dirstamp) \
	kinetis/$(DEPDIR)/$(am__dirstamp)
avr32/$(am__dirstamp):
	@$(MKDIR_P) avr32
	@: > avr32/$(am__dirstamp)
avr32/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) avr32/$(DEPDIR)
	@: > avr32/$(DEPDIR)/$(am__dirstamp)
avr32/avr32.$(OBJEXT): avr32/$(am__dirstamp) \
	avr32/$(DEPDIR)/$(am__dirstamp)
avrxmega/$(am__dirstamp):
	@$(MKDIR_P) avrxmega
	@: > avrxmega/$(am__dirstamp)
avrxmega/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) avrxmega/$(DEPDIR)
	@: > avrxmega/$(DEPDIR)/$(am__dirstamp)
avrxmega/avrxmega.$(OBJEXT): avrxmega/$(am__dirstamp) \
	avrxmega/$(DEPDIR)/$(am__dirstamp)
lm3s/$(am__dirstamp):
	@$(MKDIR_P) lm3s
	@: > lm3s/$(am__dirstamp)
lm3s/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) lm3s/$(DEPDIR)
	@: > lm3s/$(DEPDIR)/$(am__dirstamp)
lm3s/lm3s.$(OBJEXT): lm3s/$(am__dirstamp) \
	lm3s/$(DEPDIR)/$(am__dirstamp)
hcs08/$(am__dirstamp):
	@$(MKDIR_P) hcs08
	@: > hcs08/$(am__dirstamp)
hcs08/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hcs08/$(DEPDIR)
	@: > hcs08/$(DEPDIR)/$(am__dirstamp)
hcs08/hcs08.$(OBJEXT): hcs08/$(am__dirstamp) \
	hcs08/$(DEPDIR)/$(am__dirstamp)
hcs12/$(am__dirstamp):
	@$(MKDIR_P) hcs12
	@: > hcs12/$(am__dirstamp)
hcs12/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hcs12/$(DEPDIR)
	@: > hcs12/$(DEPDIR)/$(am__dirstamp)
hcs12/hcs12.$(OBJEXT): hcs12/$(am__dirstamp) \
	hcs12/$(DEPDIR)/$(am__dirstamp)
ee93cx6/$(am__dirstamp):
	@$(MKDIR_P) ee93cx6
	@: > ee93cx6/$(am__dirstamp)
ee93cx6/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ee93cx6/$(DEPDIR)
	@: > ee93cx6/$(DEPDIR)/$(am__dirstamp)
ee93cx6/ee93cx6.$(OBJEXT): ee93cx6/$(am__dirstamp) \
	ee93cx6/$(DEPDIR)/$(am__dirstamp)
ee24cxx/$(am__dirstamp):
	@$(MKDIR_P) ee24cxx
	@: > ee24cxx/$(am__dirstamp)
ee24cxx/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ee24cxx/$(DEPDIR)
	@: > ee24cxx/$(DEPDIR)/$(am__dirstamp)
ee24cxx/ee24cxx.$(OBJEXT): ee24cxx/$(am__dirstamp) \
	ee24cxx/$(DEPDIR)/$(am__dirstamp)
df25xx/$(am__dirstamp):
	@$(MKDIR_P) df25xx
	@: > df25xx/$(am__dirstamp)
df25xx/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) df25xx/$(DEPDIR)
	@: > df25xx/$(DEPDIR)/$(am__dirstamp)
df25xx/df25xx.$(OBJEXT): df25xx/$(am__dirstamp) \
	df25xx/$(DEPDIR)/$(am__dirstamp)
sd/$(am__dirstamp):
	@$(MKDIR_P) sd
	@: > sd/$(am__dirstamp)
sd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sd/$(DEPDIR)
	@: > sd/$(DEPDIR)/$(am__dirstamp)
sd/sd.$(OBJEXT): sd/$(am__dirstamp) sd/$(DEPDIR)/$(am__dirstamp)
cfi/$(am__dirstamp):
	@$(MKDIR_P) cfi
	@: > cfi/$(am__dirstamp)
cfi/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cfi/$(DEPDIR)
	@: > cfi/$(DEPDIR)/$(am__dirstamp)
cfi/cfi.$(OBJEXT): cfi/$(am__dirstamp) cfi/$(DEPDIR)/$(am__dirstamp)
nand/$(am__dirstamp):
	@$(MKDIR_P) nand
	@: > nand/$(am__dirstamp)
nand/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) nand/$(DEPDIR)
	@: > nand/$(DEPDIR)/$(am__dirstamp)
nand/nand.$(OBJEXT): nand/$(am__dirstamp) \
	nand/$(DEPDIR)/$(am__dirstamp)
sst32hfxx/$(am__dirstamp):
	@$(MKDIR_P) sst32hfxx
	@: > sst32hfxx/$(am__dirstamp)
sst32hfxx/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sst32hfxx/$(DEPDIR)
	@: > sst32hfxx/$(DEPDIR)/$(am__dirstamp)
sst32hfxx/sst32hfxx.$(OBJEXT): sst32hfxx/$(am__dirstamp) \
	sst32hfxx/$(DEPDIR)/$(am__dirstamp)

libtgt.a: $(libtgt_a_OBJECTS) $(libtgt_a_DEPENDENCIES) $(EXTRA_libtgt_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libtgt.a
	$(AM_V_AR)$(libtgt_a_AR) libtgt.a $(libtgt_a_OBJECTS) $(libtgt_a_LIBADD)
	$(AM_V_at)$(RANLIB) libtgt.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f at89s5x/*.$(OBJEXT)
	-rm -f at91sam3/*.$(OBJEXT)
	-rm -f avr32/*.$(OBJEXT)
	-rm -f avr8/*.$(OBJEXT)
	-rm -f avrxmega/*.$(OBJEXT)
	-rm -f c8051f/*.$(OBJEXT)
	-rm -f cfi/*.$(OBJEXT)
	-rm -f comisp/*.$(OBJEXT)
	-rm -f core/arm_adi/*.$(OBJEXT)
	-rm -f cortex-m/*.$(OBJEXT)
	-rm -f df25xx/*.$(OBJEXT)
	-rm -f ee24cxx/*.$(OBJEXT)
	-rm -f ee93cx6/*.$(OBJEXT)
	-rm -f hcs08/*.$(OBJEXT)
	-rm -f hcs12/*.$(OBJEXT)
	-rm -f kinetis/*.$(OBJEXT)
	-rm -f lm3s/*.$(OBJEXT)
	-rm -f lpc1000/*.$(OBJEXT)
	-rm -f lpc900/*.$(OBJEXT)
	-rm -f msp430/*.$(OBJEXT)
	-rm -f nand/*.$(OBJEXT)
	-rm -f nuc100/*.$(OBJEXT)
	-rm -f nuc400/*.$(OBJEXT)
	-rm -f psoc1/*.$(OBJEXT)
	-rm -f sd/*.$(OBJEXT)
	-rm -f sst32hfxx/*.$(OBJEXT)
	-rm -f stm32f1/*.$(OBJEXT)
	-rm -f stm32f2/*.$(OBJEXT)
	-rm -f stm32l1/*.$(OBJEXT)
	-rm -f stm8/*.$(OBJEXT)
	-rm -f svf_player/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/target.Po # am--include-marker
include ./$(DEPDIR)/target_conf.Po # am--include-marker
include ./$(DEPDIR)/target_data.Po # am--include-marker
include at89s5x/$(DEPDIR)/at89s5x.Po # am--include-marker
include at91sam3/$(DEPDIR)/at91sam3.Po # am--include-marker
include avr32/$(DEPDIR)/avr32.Po # am--include-marker
include avr8/$(DEPDIR)/avr8.Po # am--include-marker
include avr8/$(DEPDIR)/avr8_hvpp.Po # am--include-marker
include avr8/$(DEPDIR)/avr8_hvsp.Po # am--include-marker
include avr8/$(DEPDIR)/avr8_isp.Po # am--include-marker
include avr8/$(DEPDIR)/avr8_jtag.Po # am--include-marker
include avrxmega/$(DEPDIR)/avrxmega.Po # am--include-marker
include c8051f/$(DEPDIR)/c8051f.Po # am--include-marker
include c8051f/$(DEPDIR)/c8051f_c2.Po # am--include-marker
include c8051f/$(DEPDIR)/c8051f_jtag.Po # am--include-marker
include cfi/$(DEPDIR)/cfi.Po # am--include-marker
include comisp/$(DEPDIR)/comisp.Po # am--include-marker
include comisp/$(DEPDIR)/lpcarmisp.Po # am--include-marker
include comisp/$(DEPDIR)/stm32isp.Po # am--include-marker
include core/arm_adi/$(DEPDIR)/adi_v5p1.Po # am--include-marker
include cortex-m/$(DEPDIR)/cm.Po # am--include-marker
include cortex-m/$(DEPDIR)/cm_at91sam3.Po # am--include-marker
include cortex-m/$(DEPDIR)/cm_common.Po # am--include-marker
include cortex-m/$(DEPDIR)/cm_kinetis.Po # am--include-marker
include cortex-m/$(DEPDIR)/cm_lm3s.Po # am--include-marker
include cortex-m/$(DEPDIR)/cm_lpc1000.Po # am--include-marker
include cortex-m/$(DEPDIR)/cm_nuc100.Po # am--include-marker
include cortex-m/$(DEPDIR)/cm_nuc400.Po # am--include-marker
include cortex-m/$(DEPDIR)/cm_stm32_fl.Po # am--include-marker
include cortex-m/$(DEPDIR)/cm_stm32f1.Po # am--include-marker
include cortex-m/$(DEPDIR)/cm_stm32f2.Po # am--include-marker
include cortex-m/$(DEPDIR)/cm_stm32l1.Po # am--include-marker
include df25xx/$(DEPDIR)/df25xx.Po # am--include-marker
include ee24cxx/$(DEPDIR)/ee24cxx.Po # am--include-marker
include ee93cx6/$(DEPDIR)/ee93cx6.Po # am--include-marker
include hcs08/$(DEPDIR)/hcs08.Po # am--include-marker
include hcs12/$(DEPDIR)/hcs12.Po # am--include-marker
include kinetis/$(DEPDIR)/kinetis.Po # am--include-marker
include lm3s/$(DEPDIR)/lm3s.Po # am--include-marker
include lpc1000/$(DEPDIR)/lpc1000.Po # am--include-marker
include lpc900/$(DEPDIR)/lpc900.Po # am--include-marker
include msp430/$(DEPDIR)/JTAGfunc.Po # am--include-marker
include msp430/$(DEPDIR)/msp430.Po # am--include-marker
include msp430/$(DEPDIR)/msp430_bsl.Po # am--include-marker
include msp430/$(DEPDIR)/msp430_jtagsbw.Po # am--include-marker
include nand/$(DEPDIR)/nand.Po # am--include-marker
include nuc100/$(DEPDIR)/nuc100.Po # am--include-marker
include nuc400/$(DEPDIR)/nuc400.Po # am--include-marker
include psoc1/$(DEPDIR)/psoc1.Po # am--include-marker
include sd/$(DEPDIR)/sd.Po # am--include-marker
include sst32hfxx/$(DEPDIR)/sst32hfxx.Po # am--include-marker
include stm32f1/$(DEPDIR)/stm32f1.Po # am--include-marker
include stm32f2/$(DEPDIR)/stm32f2.Po # am--include-marker
include stm32l1/$(DEPDIR)/stm32l1.Po # am--include-marker
include stm8/$(DEPDIR)/stm8.Po # am--include-marker
include svf_player/$(DEPDIR)/byte_tap.Po # am--include-marker
include svf_player/$(DEPDIR)/svf_parser.Po # am--include-marker
include svf_player/$(DEPDIR)/svf_player.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f at89s5x/$(DEPDIR)/$(am__dirstamp)
	-rm -f at89s5x/$(am__dirstamp)
	-rm -f at91sam3/$(DEPDIR)/$(am__dirstamp)
	-rm -f at91sam3/$(am__dirstamp)
	-rm -f avr32/$(DEPDIR)/$(am__dirstamp)
	-rm -f avr32/$(am__dirstamp)
	-rm -f avr8/$(DEPDIR)/$(am__dirstamp)
	-rm -f avr8/$(am__dirstamp)
	-rm -f avrxmega/$(DEPDIR)/$(am__dirstamp)
	-rm -f avrxmega/$(am__dirstamp)
	-rm -f c8051f/$(DEPDIR)/$(am__dirstamp)
	-rm -f c8051f/$(am__dirstamp)
	-rm -f cfi/$(DEPDIR)/$(am__dirstamp)
	-rm -f cfi/$(am__dirstamp)
	-rm -f comisp/$(DEPDIR)/$(am__dirstamp)
	-rm -f comisp/$(am__dirstamp)
	-rm -f core/arm_adi/$(DEPDIR)/$(am__dirstamp)
	-rm -f core/arm_adi/$(am__dirstamp)
	-rm -f cortex-m/$(DEPDIR)/$(am__dirstamp)
	-rm -f cortex-m/$(am__dirstamp)
	-rm -f df25xx/$(DEPDIR)/$(am__dirstamp)
	-rm -f df25xx/$(am__dirstamp)
	-rm -f ee24cxx/$(DEPDIR)/$(am__dirstamp)
	-rm -f ee24cxx/$(am__dirstamp)
	-rm -f ee93cx6/$(DEPDIR)/$(am__dirstamp)
	-rm -f ee93cx6/$(am__dirstamp)
	-rm -f hcs08/$(DEPDIR)/$(am__dirstamp)
	-rm -f hcs08/$(am__dirstamp)
	-rm -f hcs12/$(DEPDIR)/$(am__dirstamp)
	-rm -f hcs12/$(am__dirstamp)
	-rm -f kinetis/$(DEPDIR)/$(am__dirstamp)
	-rm -f kinetis/$(am__dirstamp)
	-rm -f lm3s/$(DEPDIR)/$(am__dirstamp)
	-rm -f lm3s/$(am__dirstamp)
	-rm -f lpc1000/$(DEPDIR)/$(am__dirstamp)
	-rm -f lpc1000/$(am__dirstamp)
	-rm -f lpc900/$(DEPDIR)/$(am__dirstamp)
	-rm -f lpc900/$(am__dirstamp)
	-rm -f msp430/$(DEPDIR)/$(am__dirstamp)
	-rm -f msp430/$(am__dirstamp)
	-rm -f nand/$(DEPDIR)/$(am__dirstamp)
	-rm -f nand/$(am__dirstamp)
	-rm -f nuc100/$(DEPDIR)/$(am__dirstamp)
	-rm -f nuc100/$(am__dirstamp)
	-rm -f nuc400/$(DEPDIR)/$(am__dirstamp)
	-rm -f nuc400/$(am__dirstamp)
	-rm -f psoc1/$(DEPDIR)/$(am__dirstamp)
	-rm -f psoc1/$(am__dirstamp)
	-rm -f sd/$(DEPDIR)/$(am__dirstamp)
	-rm -f sd/$(am__dirstamp)
	-rm -f sst32hfxx/$(DEPDIR)/$(am__dirstamp)
	-rm -f sst32hfxx/$(am__dirstamp)
	-rm -f stm32f1/$(DEPDIR)/$(am__dirstamp)
	-rm -f stm32f1/$(am__dirstamp)
	-rm -f stm32f2/$(DEPDIR)/$(am__dirstamp)
	-rm -f stm32f2/$(am__dirstamp)
	-rm -f stm32l1/$(DEPDIR)/$(am__dirstamp)
	-rm -f stm32l1/$(am__dirstamp)
	-rm -f stm8/$(DEPDIR)/$(am__dirstamp)
	-rm -f stm8/$(am__dirstamp)
	-rm -f svf_player/$(DEPDIR)/$(am__dirstamp)
	-rm -f svf_player/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/target.Po
	-rm -f ./$(DEPDIR)/target_conf.Po
	-rm -f ./$(DEPDIR)/target_data.Po
	-rm -f at89s5x/$(DEPDIR)/at89s5x.Po
	-rm -f at91sam3/$(DEPDIR)/at91sam3.Po
	-rm -f avr32/$(DEPDIR)/avr32.Po
	-rm -f avr8/$(DEPDIR)/avr8.Po
	-rm -f avr8/$(DEPDIR)/avr8_hvpp.Po
	-rm -f avr8/$(DEPDIR)/avr8_hvsp.Po
	-rm -f avr8/$(DEPDIR)/avr8_isp.Po
	-rm -f avr8/$(DEPDIR)/avr8_jtag.Po
	-rm -f avrxmega/$(DEPDIR)/avrxmega.Po
	-rm -f c8051f/$(DEPDIR)/c8051f.Po
	-rm -f c8051f/$(DEPDIR)/c8051f_c2.Po
	-rm -f c8051f/$(DEPDIR)/c8051f_jtag.Po
	-rm -f cfi/$(DEPDIR)/cfi.Po
	-rm -f comisp/$(DEPDIR)/comisp.Po
	-rm -f comisp/$(DEPDIR)/lpcarmisp.Po
	-rm -f comisp/$(DEPDIR)/stm32isp.Po
	-rm -f core/arm_adi/$(DEPDIR)/adi_v5p1.Po
	-rm -f cortex-m/$(DEPDIR)/cm.Po
	-rm -f cortex-m/$(DEPDIR)/cm_at91sam3.Po
	-rm -f cortex-m/$(DEPDIR)/cm_common.Po
	-rm -f cortex-m/$(DEPDIR)/cm_kinetis.Po
	-rm -f cortex-m/$(DEPDIR)/cm_lm3s.Po
	-rm -f cortex-m/$(DEPDIR)/cm_lpc1000.Po
	-rm -f cortex-m/$(DEPDIR)/cm_nuc100.Po
	-rm -f cortex-m/$(DEPDIR)/cm_nuc400.Po
	-rm -f cortex-m/$(DEPDIR)/cm_stm32_fl.Po
	-rm -f cortex-m/$(DEPDIR)/cm_stm32f1.Po
	-rm -f cortex-m/$(DEPDIR)/cm_stm32f2.Po
	-rm -f cortex-m/$(DEPDIR)/cm_stm32l1.Po
	-rm -f df25xx/$(DEPDIR)/df25xx.Po
	-rm -f ee24cxx/$(DEPDIR)/ee24cxx.Po
	-rm -f ee93cx6/$(DEPDIR)/ee93cx6.Po
	-rm -f hcs08/$(DEPDIR)/hcs08.Po
	-rm -f hcs12/$(DEPDIR)/hcs12.Po
	-rm -f kinetis/$(DEPDIR)/kinetis.Po
	-rm -f lm3s/$(DEPDIR)/lm3s.Po
	-rm -f lpc1000/$(DEPDIR)/lpc1000.Po
	-rm -f lpc900/$(DEPDIR)/lpc900.Po
	-rm -f msp430/$(DEPDIR)/JTAGfunc.Po
	-rm -f msp430/$(DEPDIR)/msp430.Po
	-rm -f msp430/$(DEPDIR)/msp430_bsl.Po
	-rm -f msp430/$(DEPDIR)/msp430_jtagsbw.Po
	-rm -f nand/$(DEPDIR)/nand.Po
	-rm -f nuc100/$(DEPDIR)/nuc100.Po
	-rm -f nuc400/$(DEPDIR)/nuc400.Po
	-rm -f psoc1/$(DEPDIR)/psoc1.Po
	-rm -f sd/$(DEPDIR)/sd.Po
	-rm -f sst32hfxx/$(DEPDIR)/sst32hfxx.Po
	-rm -f stm32f1/$(DEPDIR)/stm32f1.Po
	-rm -f stm32f2/$(DEPDIR)/stm32f2.Po
	-rm -f stm32l1/$(DEPDIR)/stm32l1.Po
	-rm -f stm8/$(DEPDIR)/stm8.Po
	-rm -f svf_player/$(DEPDIR)/byte_tap.Po
	-rm -f svf_player/$(DEPDIR)/svf_parser.Po
	-rm -f svf_player/$(DEPDIR)/svf_player.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/target.Po
	-rm -f ./$(DEPDIR)/target_conf.Po
	-rm -f ./$(DEPDIR)/target_data.Po
	-rm -f at89s5x/$(DEPDIR)/at89s5x.Po
	-rm -f at91sam3/$(DEPDIR)/at91sam3.Po
	-rm -f avr32/$(DEPDIR)/avr32.Po
	-rm -f avr8/$(DEPDIR)/avr8.Po
	-rm -f avr8/$(DEPDIR)/avr8_hvpp.Po
	-rm -f avr8/$(DEPDIR)/avr8_hvsp.Po
	-rm -f avr8/$(DEPDIR)/avr8_isp.Po
	-rm -f avr8/$(DEPDIR)/avr8_jtag.Po
	-rm -f avrxmega/$(DEPDIR)/avrxmega.Po
	-rm -f c8051f/$(DEPDIR)/c8051f.Po
	-rm -f c8051f/$(DEPDIR)/c8051f_c2.Po
	-rm -f c8051f/$(DEPDIR)/c8051f_jtag.Po
	-rm -f cfi/$(DEPDIR)/cfi.Po
	-rm -f comisp/$(DEPDIR)/comisp.Po
	-rm -f comisp/$(DEPDIR)/lpcarmisp.Po
	-rm -f comisp/$(DEPDIR)/stm32isp.Po
	-rm -f core/arm_adi/$(DEPDIR)/adi_v5p1.Po
	-rm -f cortex-m/$(DEPDIR)/cm.Po
	-rm -f cortex-m/$(DEPDIR)/cm_at91sam3.Po
	-rm -f cortex-m/$(DEPDIR)/cm_common.Po
	-rm -f cortex-m/$(DEPDIR)/cm_kinetis.Po
	-rm -f cortex-m/$(DEPDIR)/cm_lm3s.Po
	-rm -f cortex-m/$(DEPDIR)/cm_lpc1000.Po
	-rm -f cortex-m/$(DEPDIR)/cm_nuc100.Po
	-rm -f cortex-m/$(DEPDIR)/cm_nuc400.Po
	-rm -f cortex-m/$(DEPDIR)/cm_stm32_fl.Po
	-rm -f cortex-m/$(DEPDIR)/cm_stm32f1.Po
	-rm -f cortex-m/$(DEPDIR)/cm_stm32f2.Po
	-rm -f cortex-m/$(DEPDIR)/cm_stm32l1.Po
	-rm -f df25xx/$(DEPDIR)/df25xx.Po
	-rm -f ee24cxx/$(DEPDIR)/ee24cxx.Po
	-rm -f ee93cx6/$(DEPDIR)/ee93cx6.Po
	-rm -f hcs08/$(DEPDIR)/hcs08.Po
	-rm -f hcs12/$(DEPDIR)/hcs12.Po
	-rm -f kinetis/$(DEPDIR)/kinetis.Po
	-rm -f lm3s/$(DEPDIR)/lm3s.Po
	-rm -f lpc1000/$(DEPDIR)/lpc1000.Po
	-rm -f lpc900/$(DEPDIR)/lpc900.Po
	-rm -f msp430/$(DEPDIR)/JTAGfunc.Po
	-rm -f msp430/$(DEPDIR)/msp430.Po
	-rm -f msp430/$(DEPDIR)/msp430_bsl.Po
	-rm -f msp430/$(DEPDIR)/msp430_jtagsbw.Po
	-rm -f nand/$(DEPDIR)/nand.Po
	-rm -f nuc100/$(DEPDIR)/nuc100.Po
	-rm -f nuc400/$(DEPDIR)/nuc400.Po
	-rm -f psoc1/$(DEPDIR)/psoc1.Po
	-rm -f sd/$(DEPDIR)/sd.Po
	-rm -f sst32hfxx/$(DEPDIR)/sst32hfxx.Po
	-rm -f stm32f1/$(DEPDIR)/stm32f1.Po
	-rm -f stm32f2/$(DEPDIR)/stm32f2.Po
	-rm -f stm32l1/$(DEPDIR)/stm32l1.Po
	-rm -f stm8/$(DEPDIR)/stm8.Po
	-rm -f svf_player/$(DEPDIR)/byte_tap.Po
	-rm -f svf_player/$(DEPDIR)/svf_parser.Po
	-rm -f svf_player/$(DEPDIR)/svf_player.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-noinstLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
