# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/target/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/vsprog
pkgincludedir = $(includedir)/vsprog
pkglibdir = $(libdir)/vsprog
pkglibexecdir = $(libexecdir)/vsprog
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = aarch64-unknown-linux-gnu
host_triplet = aarch64-unknown-linux-gnu
subdir = src/target
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libtgt_a_AR = $(AR) $(ARFLAGS)
libtgt_a_LIBADD =
am_libtgt_a_OBJECTS = target.$(OBJEXT) target_conf.$(OBJEXT) \
	target_data.$(OBJEXT) adi_v5p1.$(OBJEXT) cm.$(OBJEXT) \
	cm_stm32_fl.$(OBJEXT) cm_stm32f1.$(OBJEXT) \
	cm_stm32f2.$(OBJEXT) cm_stm32l1.$(OBJEXT) cm_lpc1000.$(OBJEXT) \
	cm_at91sam3.$(OBJEXT) cm_lm3s.$(OBJEXT) cm_nuc100.$(OBJEXT) \
	cm_nuc400.$(OBJEXT) cm_kinetis.$(OBJEXT) cm_common.$(OBJEXT) \
	at89s5x.$(OBJEXT) avr8.$(OBJEXT) avr8_hvpp.$(OBJEXT) \
	avr8_hvsp.$(OBJEXT) avr8_isp.$(OBJEXT) avr8_jtag.$(OBJEXT) \
	lpc900.$(OBJEXT) c8051f.$(OBJEXT) c8051f_c2.$(OBJEXT) \
	c8051f_jtag.$(OBJEXT) comisp.$(OBJEXT) lpcarmisp.$(OBJEXT) \
	stm32isp.$(OBJEXT) JTAGfunc.$(OBJEXT) msp430.$(OBJEXT) \
	msp430_jtagsbw.$(OBJEXT) msp430_bsl.$(OBJEXT) psoc1.$(OBJEXT) \
	stm8.$(OBJEXT) svf_player.$(OBJEXT) byte_tap.$(OBJEXT) \
	svf_parser.$(OBJEXT) stm32f1.$(OBJEXT) stm32f2.$(OBJEXT) \
	stm32l1.$(OBJEXT) lpc1000.$(OBJEXT) at91sam3.$(OBJEXT) \
	nuc100.$(OBJEXT) nuc400.$(OBJEXT) kinetis.$(OBJEXT) \
	avr32.$(OBJEXT) avrxmega.$(OBJEXT) lm3s.$(OBJEXT) \
	hcs08.$(OBJEXT) hcs12.$(OBJEXT) ee93cx6.$(OBJEXT) \
	ee24cxx.$(OBJEXT) df25xx.$(OBJEXT) sd.$(OBJEXT) cfi.$(OBJEXT) \
	nand.$(OBJEXT) sst32hfxx.$(OBJEXT)
libtgt_a_OBJECTS = $(am_libtgt_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/JTAGfunc.Po ./$(DEPDIR)/adi_v5p1.Po \
	./$(DEPDIR)/at89s5x.Po ./$(DEPDIR)/at91sam3.Po \
	./$(DEPDIR)/avr32.Po ./$(DEPDIR)/avr8.Po \
	./$(DEPDIR)/avr8_hvpp.Po ./$(DEPDIR)/avr8_hvsp.Po \
	./$(DEPDIR)/avr8_isp.Po ./$(DEPDIR)/avr8_jtag.Po \
	./$(DEPDIR)/avrxmega.Po ./$(DEPDIR)/byte_tap.Po \
	./$(DEPDIR)/c8051f.Po ./$(DEPDIR)/c8051f_c2.Po \
	./$(DEPDIR)/c8051f_jtag.Po ./$(DEPDIR)/cfi.Po \
	./$(DEPDIR)/cm.Po ./$(DEPDIR)/cm_at91sam3.Po \
	./$(DEPDIR)/cm_common.Po ./$(DEPDIR)/cm_kinetis.Po \
	./$(DEPDIR)/cm_lm3s.Po ./$(DEPDIR)/cm_lpc1000.Po \
	./$(DEPDIR)/cm_nuc100.Po ./$(DEPDIR)/cm_nuc400.Po \
	./$(DEPDIR)/cm_stm32_fl.Po ./$(DEPDIR)/cm_stm32f1.Po \
	./$(DEPDIR)/cm_stm32f2.Po ./$(DEPDIR)/cm_stm32l1.Po \
	./$(DEPDIR)/comisp.Po ./$(DEPDIR)/df25xx.Po \
	./$(DEPDIR)/ee24cxx.Po ./$(DEPDIR)/ee93cx6.Po \
	./$(DEPDIR)/hcs08.Po ./$(DEPDIR)/hcs12.Po \
	./$(DEPDIR)/kinetis.Po ./$(DEPDIR)/lm3s.Po \
	./$(DEPDIR)/lpc1000.Po ./$(DEPDIR)/lpc900.Po \
	./$(DEPDIR)/lpcarmisp.Po ./$(DEPDIR)/msp430.Po \
	./$(DEPDIR)/msp430_bsl.Po ./$(DEPDIR)/msp430_jtagsbw.Po \
	./$(DEPDIR)/nand.Po ./$(DEPDIR)/nuc100.Po \
	./$(DEPDIR)/nuc400.Po ./$(DEPDIR)/psoc1.Po ./$(DEPDIR)/sd.Po \
	./$(DEPDIR)/sst32hfxx.Po ./$(DEPDIR)/stm32f1.Po \
	./$(DEPDIR)/stm32f2.Po ./$(DEPDIR)/stm32isp.Po \
	./$(DEPDIR)/stm32l1.Po ./$(DEPDIR)/stm8.Po \
	./$(DEPDIR)/svf_parser.Po ./$(DEPDIR)/svf_player.Po \
	./$(DEPDIR)/target.Po ./$(DEPDIR)/target_conf.Po \
	./$(DEPDIR)/target_data.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libtgt_a_SOURCES)
DIST_SOURCES = $(libtgt_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/maddocks/versaloon-git/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/maddocks/versaloon-git/missing autoconf
AUTOHEADER = ${SHELL} /home/maddocks/versaloon-git/missing autoheader
AUTOMAKE = ${SHELL} /home/maddocks/versaloon-git/missing automake-1.16
AWK = gawk
CC = ccache gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wstrict-prototypes -Wformat=0 -Wno-unused-parameter -Wno-missing-field-initializers -Wextra -Wbad-function-cast -Wcast-align -Wredundant-decls -I/usr/include/libxml2
CPP = ccache gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXEEXT_FOR_BUILD = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/maddocks/versaloon-git/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = vsprog
PACKAGE_BUGREPORT = VSProg Mailling List <Versaloon-development@simonqian.com>
PACKAGE_NAME = vsprog
PACKAGE_STRING = vsprog 1.1
PACKAGE_TARNAME = vsprog
PACKAGE_URL = 
PACKAGE_VERSION = 1.1
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.1
XML2_CONFIG = /usr/bin/xml2-config
XML_CPPFLAGS = -I/usr/include/libxml2
XML_LIBS = -lxml2
abs_builddir = /home/maddocks/versaloon-git/src/target
abs_srcdir = /home/maddocks/versaloon-git/src/target
abs_top_builddir = /home/maddocks/versaloon-git
abs_top_srcdir = /home/maddocks/versaloon-git
ac_ct_CC = ccache gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = aarch64-unknown-linux-gnu
build_alias = 
build_cpu = aarch64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = aarch64-unknown-linux-gnu
host_alias = 
host_cpu = aarch64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/maddocks/versaloon-git/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
INCLUDES = \
    $(all_includes) \
    -I$(top_srcdir)/src/vsf_cfg \
    -I$(top_srcdir)/vsf \
    -I$(top_srcdir)/vsf/compiler/GCC \
    -I$(top_srcdir)/vsf/interfaces/cpu/pc \
    -I$(top_srcdir)/vsf/tool/list \
    -I$(top_srcdir)/src \
    -I$(top_srcdir)/src/programmer \
    -I$(top_srcdir)/src/programmer/interfaces \
    -I$(top_srcdir)/src/tools/memlist \
    -I$(top_srcdir)/src/tools/filelist \
    -I$(top_srcdir)/src/tools/fileparser \
    -I$(top_srcdir)/src/tools/pgbar \
    -I$(top_srcdir)/src/tools/strparser \
    -I$(top_srcdir)/src/tools/bufffunc \
    -I$(top_srcdir)/src/driver \
    -I$(top_srcdir)/src/driver/comport \
    -I$(top_srcdir)/src/target/core/arm_adi \
    -I$(top_srcdir)/src/target/comisp \
    -I$(top_srcdir)/src/target/cortex-m \
    -I$(top_srcdir)/src/target/stm32f1 \
    -I$(top_srcdir)/src/target/stm32f2 \
    -I$(top_srcdir)/src/target/stm32l1 \
    -I$(top_srcdir)/src/target/lpc1000 \
    -I$(top_srcdir)/src/target/at91sam3 \
    -I$(top_srcdir)/src/target/nuc100 \
    -I$(top_srcdir)/src/target/nuc400 \
    -I$(top_srcdir)/src/target/kinetis \
    -I$(top_srcdir)/src/target/avr32 \
    -I$(top_srcdir)/src/target/avrxmega \
    -I$(top_srcdir)/src/target/lm3s \
    -I$(top_srcdir)/src/target/sd \
    -I$(top_srcdir)/src/scripts \
    -I$(top_srcdir)/src/vsf

METASOURCES = AUTO
noinst_LIBRARIES = libtgt.a
libtgt_a_SOURCES = \
    target.c \
    target_conf.c \
    target_data.c \
    core/arm_adi/adi_v5p1.c \
    cortex-m/cm.c \
    cortex-m/cm_stm32_fl.c \
    cortex-m/cm_stm32f1.c \
    cortex-m/cm_stm32f2.c \
    cortex-m/cm_stm32l1.c \
    cortex-m/cm_lpc1000.c \
    cortex-m/cm_at91sam3.c \
    cortex-m/cm_lm3s.c \
    cortex-m/cm_nuc100.c \
    cortex-m/cm_nuc400.c \
    cortex-m/cm_kinetis.c \
    cortex-m/cm_common.c \
    at89s5x/at89s5x.c \
    avr8/avr8.c \
    avr8/avr8_hvpp.c \
    avr8/avr8_hvsp.c \
    avr8/avr8_isp.c \
    avr8/avr8_jtag.c \
    lpc900/lpc900.c \
    c8051f/c8051f.c \
    c8051f/c8051f_c2.c \
    c8051f/c8051f_jtag.c \
    comisp/comisp.c \
    comisp/lpcarmisp.c \
    comisp/stm32isp.c \
    msp430/JTAGfunc.c \
    msp430/msp430.c \
    msp430/msp430_jtagsbw.c \
    msp430/msp430_bsl.c \
    psoc1/psoc1.c \
    stm8/stm8.c \
    svf_player/svf_player.c \
    svf_player/byte_tap.c \
    svf_player/svf_parser.c \
    stm32f1/stm32f1.c \
    stm32f2/stm32f2.c \
    stm32l1/stm32l1.c \
    lpc1000/lpc1000.c \
    at91sam3/at91sam3.c \
    nuc100/nuc100.c \
    nuc400/nuc400.c \
    kinetis/kinetis.c \
    avr32/avr32.c \
    avrxmega/avrxmega.c \
    lm3s/lm3s.c \
    hcs08/hcs08.c \
    hcs12/hcs12.c \
    ee93cx6/ee93cx6.c \
    ee24cxx/ee24cxx.c \
    df25xx/df25xx.c \
    sd/sd.c \
    cfi/cfi.c \
    nand/nand.c \
    sst32hfxx/sst32hfxx.c

MAINTAINERCLEANFILES = Makefile.in
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/target/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/target/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libtgt.a: $(libtgt_a_OBJECTS) $(libtgt_a_DEPENDENCIES) $(EXTRA_libtgt_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libtgt.a
	$(AM_V_AR)$(libtgt_a_AR) libtgt.a $(libtgt_a_OBJECTS) $(libtgt_a_LIBADD)
	$(AM_V_at)$(RANLIB) libtgt.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/JTAGfunc.Po # am--include-marker
include ./$(DEPDIR)/adi_v5p1.Po # am--include-marker
include ./$(DEPDIR)/at89s5x.Po # am--include-marker
include ./$(DEPDIR)/at91sam3.Po # am--include-marker
include ./$(DEPDIR)/avr32.Po # am--include-marker
include ./$(DEPDIR)/avr8.Po # am--include-marker
include ./$(DEPDIR)/avr8_hvpp.Po # am--include-marker
include ./$(DEPDIR)/avr8_hvsp.Po # am--include-marker
include ./$(DEPDIR)/avr8_isp.Po # am--include-marker
include ./$(DEPDIR)/avr8_jtag.Po # am--include-marker
include ./$(DEPDIR)/avrxmega.Po # am--include-marker
include ./$(DEPDIR)/byte_tap.Po # am--include-marker
include ./$(DEPDIR)/c8051f.Po # am--include-marker
include ./$(DEPDIR)/c8051f_c2.Po # am--include-marker
include ./$(DEPDIR)/c8051f_jtag.Po # am--include-marker
include ./$(DEPDIR)/cfi.Po # am--include-marker
include ./$(DEPDIR)/cm.Po # am--include-marker
include ./$(DEPDIR)/cm_at91sam3.Po # am--include-marker
include ./$(DEPDIR)/cm_common.Po # am--include-marker
include ./$(DEPDIR)/cm_kinetis.Po # am--include-marker
include ./$(DEPDIR)/cm_lm3s.Po # am--include-marker
include ./$(DEPDIR)/cm_lpc1000.Po # am--include-marker
include ./$(DEPDIR)/cm_nuc100.Po # am--include-marker
include ./$(DEPDIR)/cm_nuc400.Po # am--include-marker
include ./$(DEPDIR)/cm_stm32_fl.Po # am--include-marker
include ./$(DEPDIR)/cm_stm32f1.Po # am--include-marker
include ./$(DEPDIR)/cm_stm32f2.Po # am--include-marker
include ./$(DEPDIR)/cm_stm32l1.Po # am--include-marker
include ./$(DEPDIR)/comisp.Po # am--include-marker
include ./$(DEPDIR)/df25xx.Po # am--include-marker
include ./$(DEPDIR)/ee24cxx.Po # am--include-marker
include ./$(DEPDIR)/ee93cx6.Po # am--include-marker
include ./$(DEPDIR)/hcs08.Po # am--include-marker
include ./$(DEPDIR)/hcs12.Po # am--include-marker
include ./$(DEPDIR)/kinetis.Po # am--include-marker
include ./$(DEPDIR)/lm3s.Po # am--include-marker
include ./$(DEPDIR)/lpc1000.Po # am--include-marker
include ./$(DEPDIR)/lpc900.Po # am--include-marker
include ./$(DEPDIR)/lpcarmisp.Po # am--include-marker
include ./$(DEPDIR)/msp430.Po # am--include-marker
include ./$(DEPDIR)/msp430_bsl.Po # am--include-marker
include ./$(DEPDIR)/msp430_jtagsbw.Po # am--include-marker
include ./$(DEPDIR)/nand.Po # am--include-marker
include ./$(DEPDIR)/nuc100.Po # am--include-marker
include ./$(DEPDIR)/nuc400.Po # am--include-marker
include ./$(DEPDIR)/psoc1.Po # am--include-marker
include ./$(DEPDIR)/sd.Po # am--include-marker
include ./$(DEPDIR)/sst32hfxx.Po # am--include-marker
include ./$(DEPDIR)/stm32f1.Po # am--include-marker
include ./$(DEPDIR)/stm32f2.Po # am--include-marker
include ./$(DEPDIR)/stm32isp.Po # am--include-marker
include ./$(DEPDIR)/stm32l1.Po # am--include-marker
include ./$(DEPDIR)/stm8.Po # am--include-marker
include ./$(DEPDIR)/svf_parser.Po # am--include-marker
include ./$(DEPDIR)/svf_player.Po # am--include-marker
include ./$(DEPDIR)/target.Po # am--include-marker
include ./$(DEPDIR)/target_conf.Po # am--include-marker
include ./$(DEPDIR)/target_data.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

adi_v5p1.o: core/arm_adi/adi_v5p1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT adi_v5p1.o -MD -MP -MF $(DEPDIR)/adi_v5p1.Tpo -c -o adi_v5p1.o `test -f 'core/arm_adi/adi_v5p1.c' || echo '$(srcdir)/'`core/arm_adi/adi_v5p1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/adi_v5p1.Tpo $(DEPDIR)/adi_v5p1.Po
#	$(AM_V_CC)source='core/arm_adi/adi_v5p1.c' object='adi_v5p1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o adi_v5p1.o `test -f 'core/arm_adi/adi_v5p1.c' || echo '$(srcdir)/'`core/arm_adi/adi_v5p1.c

adi_v5p1.obj: core/arm_adi/adi_v5p1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT adi_v5p1.obj -MD -MP -MF $(DEPDIR)/adi_v5p1.Tpo -c -o adi_v5p1.obj `if test -f 'core/arm_adi/adi_v5p1.c'; then $(CYGPATH_W) 'core/arm_adi/adi_v5p1.c'; else $(CYGPATH_W) '$(srcdir)/core/arm_adi/adi_v5p1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/adi_v5p1.Tpo $(DEPDIR)/adi_v5p1.Po
#	$(AM_V_CC)source='core/arm_adi/adi_v5p1.c' object='adi_v5p1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o adi_v5p1.obj `if test -f 'core/arm_adi/adi_v5p1.c'; then $(CYGPATH_W) 'core/arm_adi/adi_v5p1.c'; else $(CYGPATH_W) '$(srcdir)/core/arm_adi/adi_v5p1.c'; fi`

cm.o: cortex-m/cm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm.o -MD -MP -MF $(DEPDIR)/cm.Tpo -c -o cm.o `test -f 'cortex-m/cm.c' || echo '$(srcdir)/'`cortex-m/cm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm.Tpo $(DEPDIR)/cm.Po
#	$(AM_V_CC)source='cortex-m/cm.c' object='cm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm.o `test -f 'cortex-m/cm.c' || echo '$(srcdir)/'`cortex-m/cm.c

cm.obj: cortex-m/cm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm.obj -MD -MP -MF $(DEPDIR)/cm.Tpo -c -o cm.obj `if test -f 'cortex-m/cm.c'; then $(CYGPATH_W) 'cortex-m/cm.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm.Tpo $(DEPDIR)/cm.Po
#	$(AM_V_CC)source='cortex-m/cm.c' object='cm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm.obj `if test -f 'cortex-m/cm.c'; then $(CYGPATH_W) 'cortex-m/cm.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm.c'; fi`

cm_stm32_fl.o: cortex-m/cm_stm32_fl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_stm32_fl.o -MD -MP -MF $(DEPDIR)/cm_stm32_fl.Tpo -c -o cm_stm32_fl.o `test -f 'cortex-m/cm_stm32_fl.c' || echo '$(srcdir)/'`cortex-m/cm_stm32_fl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_stm32_fl.Tpo $(DEPDIR)/cm_stm32_fl.Po
#	$(AM_V_CC)source='cortex-m/cm_stm32_fl.c' object='cm_stm32_fl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_stm32_fl.o `test -f 'cortex-m/cm_stm32_fl.c' || echo '$(srcdir)/'`cortex-m/cm_stm32_fl.c

cm_stm32_fl.obj: cortex-m/cm_stm32_fl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_stm32_fl.obj -MD -MP -MF $(DEPDIR)/cm_stm32_fl.Tpo -c -o cm_stm32_fl.obj `if test -f 'cortex-m/cm_stm32_fl.c'; then $(CYGPATH_W) 'cortex-m/cm_stm32_fl.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_stm32_fl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_stm32_fl.Tpo $(DEPDIR)/cm_stm32_fl.Po
#	$(AM_V_CC)source='cortex-m/cm_stm32_fl.c' object='cm_stm32_fl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_stm32_fl.obj `if test -f 'cortex-m/cm_stm32_fl.c'; then $(CYGPATH_W) 'cortex-m/cm_stm32_fl.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_stm32_fl.c'; fi`

cm_stm32f1.o: cortex-m/cm_stm32f1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_stm32f1.o -MD -MP -MF $(DEPDIR)/cm_stm32f1.Tpo -c -o cm_stm32f1.o `test -f 'cortex-m/cm_stm32f1.c' || echo '$(srcdir)/'`cortex-m/cm_stm32f1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_stm32f1.Tpo $(DEPDIR)/cm_stm32f1.Po
#	$(AM_V_CC)source='cortex-m/cm_stm32f1.c' object='cm_stm32f1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_stm32f1.o `test -f 'cortex-m/cm_stm32f1.c' || echo '$(srcdir)/'`cortex-m/cm_stm32f1.c

cm_stm32f1.obj: cortex-m/cm_stm32f1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_stm32f1.obj -MD -MP -MF $(DEPDIR)/cm_stm32f1.Tpo -c -o cm_stm32f1.obj `if test -f 'cortex-m/cm_stm32f1.c'; then $(CYGPATH_W) 'cortex-m/cm_stm32f1.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_stm32f1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_stm32f1.Tpo $(DEPDIR)/cm_stm32f1.Po
#	$(AM_V_CC)source='cortex-m/cm_stm32f1.c' object='cm_stm32f1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_stm32f1.obj `if test -f 'cortex-m/cm_stm32f1.c'; then $(CYGPATH_W) 'cortex-m/cm_stm32f1.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_stm32f1.c'; fi`

cm_stm32f2.o: cortex-m/cm_stm32f2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_stm32f2.o -MD -MP -MF $(DEPDIR)/cm_stm32f2.Tpo -c -o cm_stm32f2.o `test -f 'cortex-m/cm_stm32f2.c' || echo '$(srcdir)/'`cortex-m/cm_stm32f2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_stm32f2.Tpo $(DEPDIR)/cm_stm32f2.Po
#	$(AM_V_CC)source='cortex-m/cm_stm32f2.c' object='cm_stm32f2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_stm32f2.o `test -f 'cortex-m/cm_stm32f2.c' || echo '$(srcdir)/'`cortex-m/cm_stm32f2.c

cm_stm32f2.obj: cortex-m/cm_stm32f2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_stm32f2.obj -MD -MP -MF $(DEPDIR)/cm_stm32f2.Tpo -c -o cm_stm32f2.obj `if test -f 'cortex-m/cm_stm32f2.c'; then $(CYGPATH_W) 'cortex-m/cm_stm32f2.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_stm32f2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_stm32f2.Tpo $(DEPDIR)/cm_stm32f2.Po
#	$(AM_V_CC)source='cortex-m/cm_stm32f2.c' object='cm_stm32f2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_stm32f2.obj `if test -f 'cortex-m/cm_stm32f2.c'; then $(CYGPATH_W) 'cortex-m/cm_stm32f2.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_stm32f2.c'; fi`

cm_stm32l1.o: cortex-m/cm_stm32l1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_stm32l1.o -MD -MP -MF $(DEPDIR)/cm_stm32l1.Tpo -c -o cm_stm32l1.o `test -f 'cortex-m/cm_stm32l1.c' || echo '$(srcdir)/'`cortex-m/cm_stm32l1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_stm32l1.Tpo $(DEPDIR)/cm_stm32l1.Po
#	$(AM_V_CC)source='cortex-m/cm_stm32l1.c' object='cm_stm32l1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_stm32l1.o `test -f 'cortex-m/cm_stm32l1.c' || echo '$(srcdir)/'`cortex-m/cm_stm32l1.c

cm_stm32l1.obj: cortex-m/cm_stm32l1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_stm32l1.obj -MD -MP -MF $(DEPDIR)/cm_stm32l1.Tpo -c -o cm_stm32l1.obj `if test -f 'cortex-m/cm_stm32l1.c'; then $(CYGPATH_W) 'cortex-m/cm_stm32l1.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_stm32l1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_stm32l1.Tpo $(DEPDIR)/cm_stm32l1.Po
#	$(AM_V_CC)source='cortex-m/cm_stm32l1.c' object='cm_stm32l1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_stm32l1.obj `if test -f 'cortex-m/cm_stm32l1.c'; then $(CYGPATH_W) 'cortex-m/cm_stm32l1.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_stm32l1.c'; fi`

cm_lpc1000.o: cortex-m/cm_lpc1000.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_lpc1000.o -MD -MP -MF $(DEPDIR)/cm_lpc1000.Tpo -c -o cm_lpc1000.o `test -f 'cortex-m/cm_lpc1000.c' || echo '$(srcdir)/'`cortex-m/cm_lpc1000.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_lpc1000.Tpo $(DEPDIR)/cm_lpc1000.Po
#	$(AM_V_CC)source='cortex-m/cm_lpc1000.c' object='cm_lpc1000.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_lpc1000.o `test -f 'cortex-m/cm_lpc1000.c' || echo '$(srcdir)/'`cortex-m/cm_lpc1000.c

cm_lpc1000.obj: cortex-m/cm_lpc1000.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_lpc1000.obj -MD -MP -MF $(DEPDIR)/cm_lpc1000.Tpo -c -o cm_lpc1000.obj `if test -f 'cortex-m/cm_lpc1000.c'; then $(CYGPATH_W) 'cortex-m/cm_lpc1000.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_lpc1000.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_lpc1000.Tpo $(DEPDIR)/cm_lpc1000.Po
#	$(AM_V_CC)source='cortex-m/cm_lpc1000.c' object='cm_lpc1000.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_lpc1000.obj `if test -f 'cortex-m/cm_lpc1000.c'; then $(CYGPATH_W) 'cortex-m/cm_lpc1000.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_lpc1000.c'; fi`

cm_at91sam3.o: cortex-m/cm_at91sam3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_at91sam3.o -MD -MP -MF $(DEPDIR)/cm_at91sam3.Tpo -c -o cm_at91sam3.o `test -f 'cortex-m/cm_at91sam3.c' || echo '$(srcdir)/'`cortex-m/cm_at91sam3.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_at91sam3.Tpo $(DEPDIR)/cm_at91sam3.Po
#	$(AM_V_CC)source='cortex-m/cm_at91sam3.c' object='cm_at91sam3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_at91sam3.o `test -f 'cortex-m/cm_at91sam3.c' || echo '$(srcdir)/'`cortex-m/cm_at91sam3.c

cm_at91sam3.obj: cortex-m/cm_at91sam3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_at91sam3.obj -MD -MP -MF $(DEPDIR)/cm_at91sam3.Tpo -c -o cm_at91sam3.obj `if test -f 'cortex-m/cm_at91sam3.c'; then $(CYGPATH_W) 'cortex-m/cm_at91sam3.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_at91sam3.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_at91sam3.Tpo $(DEPDIR)/cm_at91sam3.Po
#	$(AM_V_CC)source='cortex-m/cm_at91sam3.c' object='cm_at91sam3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_at91sam3.obj `if test -f 'cortex-m/cm_at91sam3.c'; then $(CYGPATH_W) 'cortex-m/cm_at91sam3.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_at91sam3.c'; fi`

cm_lm3s.o: cortex-m/cm_lm3s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_lm3s.o -MD -MP -MF $(DEPDIR)/cm_lm3s.Tpo -c -o cm_lm3s.o `test -f 'cortex-m/cm_lm3s.c' || echo '$(srcdir)/'`cortex-m/cm_lm3s.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_lm3s.Tpo $(DEPDIR)/cm_lm3s.Po
#	$(AM_V_CC)source='cortex-m/cm_lm3s.c' object='cm_lm3s.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_lm3s.o `test -f 'cortex-m/cm_lm3s.c' || echo '$(srcdir)/'`cortex-m/cm_lm3s.c

cm_lm3s.obj: cortex-m/cm_lm3s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_lm3s.obj -MD -MP -MF $(DEPDIR)/cm_lm3s.Tpo -c -o cm_lm3s.obj `if test -f 'cortex-m/cm_lm3s.c'; then $(CYGPATH_W) 'cortex-m/cm_lm3s.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_lm3s.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_lm3s.Tpo $(DEPDIR)/cm_lm3s.Po
#	$(AM_V_CC)source='cortex-m/cm_lm3s.c' object='cm_lm3s.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_lm3s.obj `if test -f 'cortex-m/cm_lm3s.c'; then $(CYGPATH_W) 'cortex-m/cm_lm3s.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_lm3s.c'; fi`

cm_nuc100.o: cortex-m/cm_nuc100.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_nuc100.o -MD -MP -MF $(DEPDIR)/cm_nuc100.Tpo -c -o cm_nuc100.o `test -f 'cortex-m/cm_nuc100.c' || echo '$(srcdir)/'`cortex-m/cm_nuc100.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_nuc100.Tpo $(DEPDIR)/cm_nuc100.Po
#	$(AM_V_CC)source='cortex-m/cm_nuc100.c' object='cm_nuc100.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_nuc100.o `test -f 'cortex-m/cm_nuc100.c' || echo '$(srcdir)/'`cortex-m/cm_nuc100.c

cm_nuc100.obj: cortex-m/cm_nuc100.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_nuc100.obj -MD -MP -MF $(DEPDIR)/cm_nuc100.Tpo -c -o cm_nuc100.obj `if test -f 'cortex-m/cm_nuc100.c'; then $(CYGPATH_W) 'cortex-m/cm_nuc100.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_nuc100.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_nuc100.Tpo $(DEPDIR)/cm_nuc100.Po
#	$(AM_V_CC)source='cortex-m/cm_nuc100.c' object='cm_nuc100.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_nuc100.obj `if test -f 'cortex-m/cm_nuc100.c'; then $(CYGPATH_W) 'cortex-m/cm_nuc100.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_nuc100.c'; fi`

cm_nuc400.o: cortex-m/cm_nuc400.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_nuc400.o -MD -MP -MF $(DEPDIR)/cm_nuc400.Tpo -c -o cm_nuc400.o `test -f 'cortex-m/cm_nuc400.c' || echo '$(srcdir)/'`cortex-m/cm_nuc400.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_nuc400.Tpo $(DEPDIR)/cm_nuc400.Po
#	$(AM_V_CC)source='cortex-m/cm_nuc400.c' object='cm_nuc400.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_nuc400.o `test -f 'cortex-m/cm_nuc400.c' || echo '$(srcdir)/'`cortex-m/cm_nuc400.c

cm_nuc400.obj: cortex-m/cm_nuc400.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_nuc400.obj -MD -MP -MF $(DEPDIR)/cm_nuc400.Tpo -c -o cm_nuc400.obj `if test -f 'cortex-m/cm_nuc400.c'; then $(CYGPATH_W) 'cortex-m/cm_nuc400.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_nuc400.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_nuc400.Tpo $(DEPDIR)/cm_nuc400.Po
#	$(AM_V_CC)source='cortex-m/cm_nuc400.c' object='cm_nuc400.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_nuc400.obj `if test -f 'cortex-m/cm_nuc400.c'; then $(CYGPATH_W) 'cortex-m/cm_nuc400.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_nuc400.c'; fi`

cm_kinetis.o: cortex-m/cm_kinetis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_kinetis.o -MD -MP -MF $(DEPDIR)/cm_kinetis.Tpo -c -o cm_kinetis.o `test -f 'cortex-m/cm_kinetis.c' || echo '$(srcdir)/'`cortex-m/cm_kinetis.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_kinetis.Tpo $(DEPDIR)/cm_kinetis.Po
#	$(AM_V_CC)source='cortex-m/cm_kinetis.c' object='cm_kinetis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_kinetis.o `test -f 'cortex-m/cm_kinetis.c' || echo '$(srcdir)/'`cortex-m/cm_kinetis.c

cm_kinetis.obj: cortex-m/cm_kinetis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_kinetis.obj -MD -MP -MF $(DEPDIR)/cm_kinetis.Tpo -c -o cm_kinetis.obj `if test -f 'cortex-m/cm_kinetis.c'; then $(CYGPATH_W) 'cortex-m/cm_kinetis.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_kinetis.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_kinetis.Tpo $(DEPDIR)/cm_kinetis.Po
#	$(AM_V_CC)source='cortex-m/cm_kinetis.c' object='cm_kinetis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_kinetis.obj `if test -f 'cortex-m/cm_kinetis.c'; then $(CYGPATH_W) 'cortex-m/cm_kinetis.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_kinetis.c'; fi`

cm_common.o: cortex-m/cm_common.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_common.o -MD -MP -MF $(DEPDIR)/cm_common.Tpo -c -o cm_common.o `test -f 'cortex-m/cm_common.c' || echo '$(srcdir)/'`cortex-m/cm_common.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_common.Tpo $(DEPDIR)/cm_common.Po
#	$(AM_V_CC)source='cortex-m/cm_common.c' object='cm_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_common.o `test -f 'cortex-m/cm_common.c' || echo '$(srcdir)/'`cortex-m/cm_common.c

cm_common.obj: cortex-m/cm_common.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cm_common.obj -MD -MP -MF $(DEPDIR)/cm_common.Tpo -c -o cm_common.obj `if test -f 'cortex-m/cm_common.c'; then $(CYGPATH_W) 'cortex-m/cm_common.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_common.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cm_common.Tpo $(DEPDIR)/cm_common.Po
#	$(AM_V_CC)source='cortex-m/cm_common.c' object='cm_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cm_common.obj `if test -f 'cortex-m/cm_common.c'; then $(CYGPATH_W) 'cortex-m/cm_common.c'; else $(CYGPATH_W) '$(srcdir)/cortex-m/cm_common.c'; fi`

at89s5x.o: at89s5x/at89s5x.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT at89s5x.o -MD -MP -MF $(DEPDIR)/at89s5x.Tpo -c -o at89s5x.o `test -f 'at89s5x/at89s5x.c' || echo '$(srcdir)/'`at89s5x/at89s5x.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/at89s5x.Tpo $(DEPDIR)/at89s5x.Po
#	$(AM_V_CC)source='at89s5x/at89s5x.c' object='at89s5x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o at89s5x.o `test -f 'at89s5x/at89s5x.c' || echo '$(srcdir)/'`at89s5x/at89s5x.c

at89s5x.obj: at89s5x/at89s5x.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT at89s5x.obj -MD -MP -MF $(DEPDIR)/at89s5x.Tpo -c -o at89s5x.obj `if test -f 'at89s5x/at89s5x.c'; then $(CYGPATH_W) 'at89s5x/at89s5x.c'; else $(CYGPATH_W) '$(srcdir)/at89s5x/at89s5x.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/at89s5x.Tpo $(DEPDIR)/at89s5x.Po
#	$(AM_V_CC)source='at89s5x/at89s5x.c' object='at89s5x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o at89s5x.obj `if test -f 'at89s5x/at89s5x.c'; then $(CYGPATH_W) 'at89s5x/at89s5x.c'; else $(CYGPATH_W) '$(srcdir)/at89s5x/at89s5x.c'; fi`

avr8.o: avr8/avr8.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avr8.o -MD -MP -MF $(DEPDIR)/avr8.Tpo -c -o avr8.o `test -f 'avr8/avr8.c' || echo '$(srcdir)/'`avr8/avr8.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr8.Tpo $(DEPDIR)/avr8.Po
#	$(AM_V_CC)source='avr8/avr8.c' object='avr8.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avr8.o `test -f 'avr8/avr8.c' || echo '$(srcdir)/'`avr8/avr8.c

avr8.obj: avr8/avr8.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avr8.obj -MD -MP -MF $(DEPDIR)/avr8.Tpo -c -o avr8.obj `if test -f 'avr8/avr8.c'; then $(CYGPATH_W) 'avr8/avr8.c'; else $(CYGPATH_W) '$(srcdir)/avr8/avr8.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr8.Tpo $(DEPDIR)/avr8.Po
#	$(AM_V_CC)source='avr8/avr8.c' object='avr8.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avr8.obj `if test -f 'avr8/avr8.c'; then $(CYGPATH_W) 'avr8/avr8.c'; else $(CYGPATH_W) '$(srcdir)/avr8/avr8.c'; fi`

avr8_hvpp.o: avr8/avr8_hvpp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avr8_hvpp.o -MD -MP -MF $(DEPDIR)/avr8_hvpp.Tpo -c -o avr8_hvpp.o `test -f 'avr8/avr8_hvpp.c' || echo '$(srcdir)/'`avr8/avr8_hvpp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr8_hvpp.Tpo $(DEPDIR)/avr8_hvpp.Po
#	$(AM_V_CC)source='avr8/avr8_hvpp.c' object='avr8_hvpp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avr8_hvpp.o `test -f 'avr8/avr8_hvpp.c' || echo '$(srcdir)/'`avr8/avr8_hvpp.c

avr8_hvpp.obj: avr8/avr8_hvpp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avr8_hvpp.obj -MD -MP -MF $(DEPDIR)/avr8_hvpp.Tpo -c -o avr8_hvpp.obj `if test -f 'avr8/avr8_hvpp.c'; then $(CYGPATH_W) 'avr8/avr8_hvpp.c'; else $(CYGPATH_W) '$(srcdir)/avr8/avr8_hvpp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr8_hvpp.Tpo $(DEPDIR)/avr8_hvpp.Po
#	$(AM_V_CC)source='avr8/avr8_hvpp.c' object='avr8_hvpp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avr8_hvpp.obj `if test -f 'avr8/avr8_hvpp.c'; then $(CYGPATH_W) 'avr8/avr8_hvpp.c'; else $(CYGPATH_W) '$(srcdir)/avr8/avr8_hvpp.c'; fi`

avr8_hvsp.o: avr8/avr8_hvsp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avr8_hvsp.o -MD -MP -MF $(DEPDIR)/avr8_hvsp.Tpo -c -o avr8_hvsp.o `test -f 'avr8/avr8_hvsp.c' || echo '$(srcdir)/'`avr8/avr8_hvsp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr8_hvsp.Tpo $(DEPDIR)/avr8_hvsp.Po
#	$(AM_V_CC)source='avr8/avr8_hvsp.c' object='avr8_hvsp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avr8_hvsp.o `test -f 'avr8/avr8_hvsp.c' || echo '$(srcdir)/'`avr8/avr8_hvsp.c

avr8_hvsp.obj: avr8/avr8_hvsp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avr8_hvsp.obj -MD -MP -MF $(DEPDIR)/avr8_hvsp.Tpo -c -o avr8_hvsp.obj `if test -f 'avr8/avr8_hvsp.c'; then $(CYGPATH_W) 'avr8/avr8_hvsp.c'; else $(CYGPATH_W) '$(srcdir)/avr8/avr8_hvsp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr8_hvsp.Tpo $(DEPDIR)/avr8_hvsp.Po
#	$(AM_V_CC)source='avr8/avr8_hvsp.c' object='avr8_hvsp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avr8_hvsp.obj `if test -f 'avr8/avr8_hvsp.c'; then $(CYGPATH_W) 'avr8/avr8_hvsp.c'; else $(CYGPATH_W) '$(srcdir)/avr8/avr8_hvsp.c'; fi`

avr8_isp.o: avr8/avr8_isp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avr8_isp.o -MD -MP -MF $(DEPDIR)/avr8_isp.Tpo -c -o avr8_isp.o `test -f 'avr8/avr8_isp.c' || echo '$(srcdir)/'`avr8/avr8_isp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr8_isp.Tpo $(DEPDIR)/avr8_isp.Po
#	$(AM_V_CC)source='avr8/avr8_isp.c' object='avr8_isp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avr8_isp.o `test -f 'avr8/avr8_isp.c' || echo '$(srcdir)/'`avr8/avr8_isp.c

avr8_isp.obj: avr8/avr8_isp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avr8_isp.obj -MD -MP -MF $(DEPDIR)/avr8_isp.Tpo -c -o avr8_isp.obj `if test -f 'avr8/avr8_isp.c'; then $(CYGPATH_W) 'avr8/avr8_isp.c'; else $(CYGPATH_W) '$(srcdir)/avr8/avr8_isp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr8_isp.Tpo $(DEPDIR)/avr8_isp.Po
#	$(AM_V_CC)source='avr8/avr8_isp.c' object='avr8_isp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avr8_isp.obj `if test -f 'avr8/avr8_isp.c'; then $(CYGPATH_W) 'avr8/avr8_isp.c'; else $(CYGPATH_W) '$(srcdir)/avr8/avr8_isp.c'; fi`

avr8_jtag.o: avr8/avr8_jtag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avr8_jtag.o -MD -MP -MF $(DEPDIR)/avr8_jtag.Tpo -c -o avr8_jtag.o `test -f 'avr8/avr8_jtag.c' || echo '$(srcdir)/'`avr8/avr8_jtag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr8_jtag.Tpo $(DEPDIR)/avr8_jtag.Po
#	$(AM_V_CC)source='avr8/avr8_jtag.c' object='avr8_jtag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avr8_jtag.o `test -f 'avr8/avr8_jtag.c' || echo '$(srcdir)/'`avr8/avr8_jtag.c

avr8_jtag.obj: avr8/avr8_jtag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avr8_jtag.obj -MD -MP -MF $(DEPDIR)/avr8_jtag.Tpo -c -o avr8_jtag.obj `if test -f 'avr8/avr8_jtag.c'; then $(CYGPATH_W) 'avr8/avr8_jtag.c'; else $(CYGPATH_W) '$(srcdir)/avr8/avr8_jtag.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr8_jtag.Tpo $(DEPDIR)/avr8_jtag.Po
#	$(AM_V_CC)source='avr8/avr8_jtag.c' object='avr8_jtag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avr8_jtag.obj `if test -f 'avr8/avr8_jtag.c'; then $(CYGPATH_W) 'avr8/avr8_jtag.c'; else $(CYGPATH_W) '$(srcdir)/avr8/avr8_jtag.c'; fi`

lpc900.o: lpc900/lpc900.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc900.o -MD -MP -MF $(DEPDIR)/lpc900.Tpo -c -o lpc900.o `test -f 'lpc900/lpc900.c' || echo '$(srcdir)/'`lpc900/lpc900.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lpc900.Tpo $(DEPDIR)/lpc900.Po
#	$(AM_V_CC)source='lpc900/lpc900.c' object='lpc900.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc900.o `test -f 'lpc900/lpc900.c' || echo '$(srcdir)/'`lpc900/lpc900.c

lpc900.obj: lpc900/lpc900.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc900.obj -MD -MP -MF $(DEPDIR)/lpc900.Tpo -c -o lpc900.obj `if test -f 'lpc900/lpc900.c'; then $(CYGPATH_W) 'lpc900/lpc900.c'; else $(CYGPATH_W) '$(srcdir)/lpc900/lpc900.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lpc900.Tpo $(DEPDIR)/lpc900.Po
#	$(AM_V_CC)source='lpc900/lpc900.c' object='lpc900.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc900.obj `if test -f 'lpc900/lpc900.c'; then $(CYGPATH_W) 'lpc900/lpc900.c'; else $(CYGPATH_W) '$(srcdir)/lpc900/lpc900.c'; fi`

c8051f.o: c8051f/c8051f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT c8051f.o -MD -MP -MF $(DEPDIR)/c8051f.Tpo -c -o c8051f.o `test -f 'c8051f/c8051f.c' || echo '$(srcdir)/'`c8051f/c8051f.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/c8051f.Tpo $(DEPDIR)/c8051f.Po
#	$(AM_V_CC)source='c8051f/c8051f.c' object='c8051f.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o c8051f.o `test -f 'c8051f/c8051f.c' || echo '$(srcdir)/'`c8051f/c8051f.c

c8051f.obj: c8051f/c8051f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT c8051f.obj -MD -MP -MF $(DEPDIR)/c8051f.Tpo -c -o c8051f.obj `if test -f 'c8051f/c8051f.c'; then $(CYGPATH_W) 'c8051f/c8051f.c'; else $(CYGPATH_W) '$(srcdir)/c8051f/c8051f.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/c8051f.Tpo $(DEPDIR)/c8051f.Po
#	$(AM_V_CC)source='c8051f/c8051f.c' object='c8051f.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o c8051f.obj `if test -f 'c8051f/c8051f.c'; then $(CYGPATH_W) 'c8051f/c8051f.c'; else $(CYGPATH_W) '$(srcdir)/c8051f/c8051f.c'; fi`

c8051f_c2.o: c8051f/c8051f_c2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT c8051f_c2.o -MD -MP -MF $(DEPDIR)/c8051f_c2.Tpo -c -o c8051f_c2.o `test -f 'c8051f/c8051f_c2.c' || echo '$(srcdir)/'`c8051f/c8051f_c2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/c8051f_c2.Tpo $(DEPDIR)/c8051f_c2.Po
#	$(AM_V_CC)source='c8051f/c8051f_c2.c' object='c8051f_c2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o c8051f_c2.o `test -f 'c8051f/c8051f_c2.c' || echo '$(srcdir)/'`c8051f/c8051f_c2.c

c8051f_c2.obj: c8051f/c8051f_c2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT c8051f_c2.obj -MD -MP -MF $(DEPDIR)/c8051f_c2.Tpo -c -o c8051f_c2.obj `if test -f 'c8051f/c8051f_c2.c'; then $(CYGPATH_W) 'c8051f/c8051f_c2.c'; else $(CYGPATH_W) '$(srcdir)/c8051f/c8051f_c2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/c8051f_c2.Tpo $(DEPDIR)/c8051f_c2.Po
#	$(AM_V_CC)source='c8051f/c8051f_c2.c' object='c8051f_c2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o c8051f_c2.obj `if test -f 'c8051f/c8051f_c2.c'; then $(CYGPATH_W) 'c8051f/c8051f_c2.c'; else $(CYGPATH_W) '$(srcdir)/c8051f/c8051f_c2.c'; fi`

c8051f_jtag.o: c8051f/c8051f_jtag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT c8051f_jtag.o -MD -MP -MF $(DEPDIR)/c8051f_jtag.Tpo -c -o c8051f_jtag.o `test -f 'c8051f/c8051f_jtag.c' || echo '$(srcdir)/'`c8051f/c8051f_jtag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/c8051f_jtag.Tpo $(DEPDIR)/c8051f_jtag.Po
#	$(AM_V_CC)source='c8051f/c8051f_jtag.c' object='c8051f_jtag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o c8051f_jtag.o `test -f 'c8051f/c8051f_jtag.c' || echo '$(srcdir)/'`c8051f/c8051f_jtag.c

c8051f_jtag.obj: c8051f/c8051f_jtag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT c8051f_jtag.obj -MD -MP -MF $(DEPDIR)/c8051f_jtag.Tpo -c -o c8051f_jtag.obj `if test -f 'c8051f/c8051f_jtag.c'; then $(CYGPATH_W) 'c8051f/c8051f_jtag.c'; else $(CYGPATH_W) '$(srcdir)/c8051f/c8051f_jtag.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/c8051f_jtag.Tpo $(DEPDIR)/c8051f_jtag.Po
#	$(AM_V_CC)source='c8051f/c8051f_jtag.c' object='c8051f_jtag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o c8051f_jtag.obj `if test -f 'c8051f/c8051f_jtag.c'; then $(CYGPATH_W) 'c8051f/c8051f_jtag.c'; else $(CYGPATH_W) '$(srcdir)/c8051f/c8051f_jtag.c'; fi`

comisp.o: comisp/comisp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT comisp.o -MD -MP -MF $(DEPDIR)/comisp.Tpo -c -o comisp.o `test -f 'comisp/comisp.c' || echo '$(srcdir)/'`comisp/comisp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/comisp.Tpo $(DEPDIR)/comisp.Po
#	$(AM_V_CC)source='comisp/comisp.c' object='comisp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o comisp.o `test -f 'comisp/comisp.c' || echo '$(srcdir)/'`comisp/comisp.c

comisp.obj: comisp/comisp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT comisp.obj -MD -MP -MF $(DEPDIR)/comisp.Tpo -c -o comisp.obj `if test -f 'comisp/comisp.c'; then $(CYGPATH_W) 'comisp/comisp.c'; else $(CYGPATH_W) '$(srcdir)/comisp/comisp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/comisp.Tpo $(DEPDIR)/comisp.Po
#	$(AM_V_CC)source='comisp/comisp.c' object='comisp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o comisp.obj `if test -f 'comisp/comisp.c'; then $(CYGPATH_W) 'comisp/comisp.c'; else $(CYGPATH_W) '$(srcdir)/comisp/comisp.c'; fi`

lpcarmisp.o: comisp/lpcarmisp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpcarmisp.o -MD -MP -MF $(DEPDIR)/lpcarmisp.Tpo -c -o lpcarmisp.o `test -f 'comisp/lpcarmisp.c' || echo '$(srcdir)/'`comisp/lpcarmisp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lpcarmisp.Tpo $(DEPDIR)/lpcarmisp.Po
#	$(AM_V_CC)source='comisp/lpcarmisp.c' object='lpcarmisp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpcarmisp.o `test -f 'comisp/lpcarmisp.c' || echo '$(srcdir)/'`comisp/lpcarmisp.c

lpcarmisp.obj: comisp/lpcarmisp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpcarmisp.obj -MD -MP -MF $(DEPDIR)/lpcarmisp.Tpo -c -o lpcarmisp.obj `if test -f 'comisp/lpcarmisp.c'; then $(CYGPATH_W) 'comisp/lpcarmisp.c'; else $(CYGPATH_W) '$(srcdir)/comisp/lpcarmisp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lpcarmisp.Tpo $(DEPDIR)/lpcarmisp.Po
#	$(AM_V_CC)source='comisp/lpcarmisp.c' object='lpcarmisp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpcarmisp.obj `if test -f 'comisp/lpcarmisp.c'; then $(CYGPATH_W) 'comisp/lpcarmisp.c'; else $(CYGPATH_W) '$(srcdir)/comisp/lpcarmisp.c'; fi`

stm32isp.o: comisp/stm32isp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stm32isp.o -MD -MP -MF $(DEPDIR)/stm32isp.Tpo -c -o stm32isp.o `test -f 'comisp/stm32isp.c' || echo '$(srcdir)/'`comisp/stm32isp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/stm32isp.Tpo $(DEPDIR)/stm32isp.Po
#	$(AM_V_CC)source='comisp/stm32isp.c' object='stm32isp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stm32isp.o `test -f 'comisp/stm32isp.c' || echo '$(srcdir)/'`comisp/stm32isp.c

stm32isp.obj: comisp/stm32isp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stm32isp.obj -MD -MP -MF $(DEPDIR)/stm32isp.Tpo -c -o stm32isp.obj `if test -f 'comisp/stm32isp.c'; then $(CYGPATH_W) 'comisp/stm32isp.c'; else $(CYGPATH_W) '$(srcdir)/comisp/stm32isp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/stm32isp.Tpo $(DEPDIR)/stm32isp.Po
#	$(AM_V_CC)source='comisp/stm32isp.c' object='stm32isp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stm32isp.obj `if test -f 'comisp/stm32isp.c'; then $(CYGPATH_W) 'comisp/stm32isp.c'; else $(CYGPATH_W) '$(srcdir)/comisp/stm32isp.c'; fi`

JTAGfunc.o: msp430/JTAGfunc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT JTAGfunc.o -MD -MP -MF $(DEPDIR)/JTAGfunc.Tpo -c -o JTAGfunc.o `test -f 'msp430/JTAGfunc.c' || echo '$(srcdir)/'`msp430/JTAGfunc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/JTAGfunc.Tpo $(DEPDIR)/JTAGfunc.Po
#	$(AM_V_CC)source='msp430/JTAGfunc.c' object='JTAGfunc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o JTAGfunc.o `test -f 'msp430/JTAGfunc.c' || echo '$(srcdir)/'`msp430/JTAGfunc.c

JTAGfunc.obj: msp430/JTAGfunc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT JTAGfunc.obj -MD -MP -MF $(DEPDIR)/JTAGfunc.Tpo -c -o JTAGfunc.obj `if test -f 'msp430/JTAGfunc.c'; then $(CYGPATH_W) 'msp430/JTAGfunc.c'; else $(CYGPATH_W) '$(srcdir)/msp430/JTAGfunc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/JTAGfunc.Tpo $(DEPDIR)/JTAGfunc.Po
#	$(AM_V_CC)source='msp430/JTAGfunc.c' object='JTAGfunc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o JTAGfunc.obj `if test -f 'msp430/JTAGfunc.c'; then $(CYGPATH_W) 'msp430/JTAGfunc.c'; else $(CYGPATH_W) '$(srcdir)/msp430/JTAGfunc.c'; fi`

msp430.o: msp430/msp430.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT msp430.o -MD -MP -MF $(DEPDIR)/msp430.Tpo -c -o msp430.o `test -f 'msp430/msp430.c' || echo '$(srcdir)/'`msp430/msp430.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/msp430.Tpo $(DEPDIR)/msp430.Po
#	$(AM_V_CC)source='msp430/msp430.c' object='msp430.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o msp430.o `test -f 'msp430/msp430.c' || echo '$(srcdir)/'`msp430/msp430.c

msp430.obj: msp430/msp430.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT msp430.obj -MD -MP -MF $(DEPDIR)/msp430.Tpo -c -o msp430.obj `if test -f 'msp430/msp430.c'; then $(CYGPATH_W) 'msp430/msp430.c'; else $(CYGPATH_W) '$(srcdir)/msp430/msp430.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/msp430.Tpo $(DEPDIR)/msp430.Po
#	$(AM_V_CC)source='msp430/msp430.c' object='msp430.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o msp430.obj `if test -f 'msp430/msp430.c'; then $(CYGPATH_W) 'msp430/msp430.c'; else $(CYGPATH_W) '$(srcdir)/msp430/msp430.c'; fi`

msp430_jtagsbw.o: msp430/msp430_jtagsbw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT msp430_jtagsbw.o -MD -MP -MF $(DEPDIR)/msp430_jtagsbw.Tpo -c -o msp430_jtagsbw.o `test -f 'msp430/msp430_jtagsbw.c' || echo '$(srcdir)/'`msp430/msp430_jtagsbw.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/msp430_jtagsbw.Tpo $(DEPDIR)/msp430_jtagsbw.Po
#	$(AM_V_CC)source='msp430/msp430_jtagsbw.c' object='msp430_jtagsbw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o msp430_jtagsbw.o `test -f 'msp430/msp430_jtagsbw.c' || echo '$(srcdir)/'`msp430/msp430_jtagsbw.c

msp430_jtagsbw.obj: msp430/msp430_jtagsbw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT msp430_jtagsbw.obj -MD -MP -MF $(DEPDIR)/msp430_jtagsbw.Tpo -c -o msp430_jtagsbw.obj `if test -f 'msp430/msp430_jtagsbw.c'; then $(CYGPATH_W) 'msp430/msp430_jtagsbw.c'; else $(CYGPATH_W) '$(srcdir)/msp430/msp430_jtagsbw.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/msp430_jtagsbw.Tpo $(DEPDIR)/msp430_jtagsbw.Po
#	$(AM_V_CC)source='msp430/msp430_jtagsbw.c' object='msp430_jtagsbw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o msp430_jtagsbw.obj `if test -f 'msp430/msp430_jtagsbw.c'; then $(CYGPATH_W) 'msp430/msp430_jtagsbw.c'; else $(CYGPATH_W) '$(srcdir)/msp430/msp430_jtagsbw.c'; fi`

msp430_bsl.o: msp430/msp430_bsl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT msp430_bsl.o -MD -MP -MF $(DEPDIR)/msp430_bsl.Tpo -c -o msp430_bsl.o `test -f 'msp430/msp430_bsl.c' || echo '$(srcdir)/'`msp430/msp430_bsl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/msp430_bsl.Tpo $(DEPDIR)/msp430_bsl.Po
#	$(AM_V_CC)source='msp430/msp430_bsl.c' object='msp430_bsl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o msp430_bsl.o `test -f 'msp430/msp430_bsl.c' || echo '$(srcdir)/'`msp430/msp430_bsl.c

msp430_bsl.obj: msp430/msp430_bsl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT msp430_bsl.obj -MD -MP -MF $(DEPDIR)/msp430_bsl.Tpo -c -o msp430_bsl.obj `if test -f 'msp430/msp430_bsl.c'; then $(CYGPATH_W) 'msp430/msp430_bsl.c'; else $(CYGPATH_W) '$(srcdir)/msp430/msp430_bsl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/msp430_bsl.Tpo $(DEPDIR)/msp430_bsl.Po
#	$(AM_V_CC)source='msp430/msp430_bsl.c' object='msp430_bsl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o msp430_bsl.obj `if test -f 'msp430/msp430_bsl.c'; then $(CYGPATH_W) 'msp430/msp430_bsl.c'; else $(CYGPATH_W) '$(srcdir)/msp430/msp430_bsl.c'; fi`

psoc1.o: psoc1/psoc1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT psoc1.o -MD -MP -MF $(DEPDIR)/psoc1.Tpo -c -o psoc1.o `test -f 'psoc1/psoc1.c' || echo '$(srcdir)/'`psoc1/psoc1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/psoc1.Tpo $(DEPDIR)/psoc1.Po
#	$(AM_V_CC)source='psoc1/psoc1.c' object='psoc1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o psoc1.o `test -f 'psoc1/psoc1.c' || echo '$(srcdir)/'`psoc1/psoc1.c

psoc1.obj: psoc1/psoc1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT psoc1.obj -MD -MP -MF $(DEPDIR)/psoc1.Tpo -c -o psoc1.obj `if test -f 'psoc1/psoc1.c'; then $(CYGPATH_W) 'psoc1/psoc1.c'; else $(CYGPATH_W) '$(srcdir)/psoc1/psoc1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/psoc1.Tpo $(DEPDIR)/psoc1.Po
#	$(AM_V_CC)source='psoc1/psoc1.c' object='psoc1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o psoc1.obj `if test -f 'psoc1/psoc1.c'; then $(CYGPATH_W) 'psoc1/psoc1.c'; else $(CYGPATH_W) '$(srcdir)/psoc1/psoc1.c'; fi`

stm8.o: stm8/stm8.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stm8.o -MD -MP -MF $(DEPDIR)/stm8.Tpo -c -o stm8.o `test -f 'stm8/stm8.c' || echo '$(srcdir)/'`stm8/stm8.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/stm8.Tpo $(DEPDIR)/stm8.Po
#	$(AM_V_CC)source='stm8/stm8.c' object='stm8.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stm8.o `test -f 'stm8/stm8.c' || echo '$(srcdir)/'`stm8/stm8.c

stm8.obj: stm8/stm8.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stm8.obj -MD -MP -MF $(DEPDIR)/stm8.Tpo -c -o stm8.obj `if test -f 'stm8/stm8.c'; then $(CYGPATH_W) 'stm8/stm8.c'; else $(CYGPATH_W) '$(srcdir)/stm8/stm8.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/stm8.Tpo $(DEPDIR)/stm8.Po
#	$(AM_V_CC)source='stm8/stm8.c' object='stm8.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stm8.obj `if test -f 'stm8/stm8.c'; then $(CYGPATH_W) 'stm8/stm8.c'; else $(CYGPATH_W) '$(srcdir)/stm8/stm8.c'; fi`

svf_player.o: svf_player/svf_player.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT svf_player.o -MD -MP -MF $(DEPDIR)/svf_player.Tpo -c -o svf_player.o `test -f 'svf_player/svf_player.c' || echo '$(srcdir)/'`svf_player/svf_player.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/svf_player.Tpo $(DEPDIR)/svf_player.Po
#	$(AM_V_CC)source='svf_player/svf_player.c' object='svf_player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o svf_player.o `test -f 'svf_player/svf_player.c' || echo '$(srcdir)/'`svf_player/svf_player.c

svf_player.obj: svf_player/svf_player.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT svf_player.obj -MD -MP -MF $(DEPDIR)/svf_player.Tpo -c -o svf_player.obj `if test -f 'svf_player/svf_player.c'; then $(CYGPATH_W) 'svf_player/svf_player.c'; else $(CYGPATH_W) '$(srcdir)/svf_player/svf_player.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/svf_player.Tpo $(DEPDIR)/svf_player.Po
#	$(AM_V_CC)source='svf_player/svf_player.c' object='svf_player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o svf_player.obj `if test -f 'svf_player/svf_player.c'; then $(CYGPATH_W) 'svf_player/svf_player.c'; else $(CYGPATH_W) '$(srcdir)/svf_player/svf_player.c'; fi`

byte_tap.o: svf_player/byte_tap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT byte_tap.o -MD -MP -MF $(DEPDIR)/byte_tap.Tpo -c -o byte_tap.o `test -f 'svf_player/byte_tap.c' || echo '$(srcdir)/'`svf_player/byte_tap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/byte_tap.Tpo $(DEPDIR)/byte_tap.Po
#	$(AM_V_CC)source='svf_player/byte_tap.c' object='byte_tap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o byte_tap.o `test -f 'svf_player/byte_tap.c' || echo '$(srcdir)/'`svf_player/byte_tap.c

byte_tap.obj: svf_player/byte_tap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT byte_tap.obj -MD -MP -MF $(DEPDIR)/byte_tap.Tpo -c -o byte_tap.obj `if test -f 'svf_player/byte_tap.c'; then $(CYGPATH_W) 'svf_player/byte_tap.c'; else $(CYGPATH_W) '$(srcdir)/svf_player/byte_tap.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/byte_tap.Tpo $(DEPDIR)/byte_tap.Po
#	$(AM_V_CC)source='svf_player/byte_tap.c' object='byte_tap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o byte_tap.obj `if test -f 'svf_player/byte_tap.c'; then $(CYGPATH_W) 'svf_player/byte_tap.c'; else $(CYGPATH_W) '$(srcdir)/svf_player/byte_tap.c'; fi`

svf_parser.o: svf_player/svf_parser.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT svf_parser.o -MD -MP -MF $(DEPDIR)/svf_parser.Tpo -c -o svf_parser.o `test -f 'svf_player/svf_parser.c' || echo '$(srcdir)/'`svf_player/svf_parser.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/svf_parser.Tpo $(DEPDIR)/svf_parser.Po
#	$(AM_V_CC)source='svf_player/svf_parser.c' object='svf_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o svf_parser.o `test -f 'svf_player/svf_parser.c' || echo '$(srcdir)/'`svf_player/svf_parser.c

svf_parser.obj: svf_player/svf_parser.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT svf_parser.obj -MD -MP -MF $(DEPDIR)/svf_parser.Tpo -c -o svf_parser.obj `if test -f 'svf_player/svf_parser.c'; then $(CYGPATH_W) 'svf_player/svf_parser.c'; else $(CYGPATH_W) '$(srcdir)/svf_player/svf_parser.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/svf_parser.Tpo $(DEPDIR)/svf_parser.Po
#	$(AM_V_CC)source='svf_player/svf_parser.c' object='svf_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o svf_parser.obj `if test -f 'svf_player/svf_parser.c'; then $(CYGPATH_W) 'svf_player/svf_parser.c'; else $(CYGPATH_W) '$(srcdir)/svf_player/svf_parser.c'; fi`

stm32f1.o: stm32f1/stm32f1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stm32f1.o -MD -MP -MF $(DEPDIR)/stm32f1.Tpo -c -o stm32f1.o `test -f 'stm32f1/stm32f1.c' || echo '$(srcdir)/'`stm32f1/stm32f1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/stm32f1.Tpo $(DEPDIR)/stm32f1.Po
#	$(AM_V_CC)source='stm32f1/stm32f1.c' object='stm32f1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stm32f1.o `test -f 'stm32f1/stm32f1.c' || echo '$(srcdir)/'`stm32f1/stm32f1.c

stm32f1.obj: stm32f1/stm32f1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stm32f1.obj -MD -MP -MF $(DEPDIR)/stm32f1.Tpo -c -o stm32f1.obj `if test -f 'stm32f1/stm32f1.c'; then $(CYGPATH_W) 'stm32f1/stm32f1.c'; else $(CYGPATH_W) '$(srcdir)/stm32f1/stm32f1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/stm32f1.Tpo $(DEPDIR)/stm32f1.Po
#	$(AM_V_CC)source='stm32f1/stm32f1.c' object='stm32f1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stm32f1.obj `if test -f 'stm32f1/stm32f1.c'; then $(CYGPATH_W) 'stm32f1/stm32f1.c'; else $(CYGPATH_W) '$(srcdir)/stm32f1/stm32f1.c'; fi`

stm32f2.o: stm32f2/stm32f2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stm32f2.o -MD -MP -MF $(DEPDIR)/stm32f2.Tpo -c -o stm32f2.o `test -f 'stm32f2/stm32f2.c' || echo '$(srcdir)/'`stm32f2/stm32f2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/stm32f2.Tpo $(DEPDIR)/stm32f2.Po
#	$(AM_V_CC)source='stm32f2/stm32f2.c' object='stm32f2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stm32f2.o `test -f 'stm32f2/stm32f2.c' || echo '$(srcdir)/'`stm32f2/stm32f2.c

stm32f2.obj: stm32f2/stm32f2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stm32f2.obj -MD -MP -MF $(DEPDIR)/stm32f2.Tpo -c -o stm32f2.obj `if test -f 'stm32f2/stm32f2.c'; then $(CYGPATH_W) 'stm32f2/stm32f2.c'; else $(CYGPATH_W) '$(srcdir)/stm32f2/stm32f2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/stm32f2.Tpo $(DEPDIR)/stm32f2.Po
#	$(AM_V_CC)source='stm32f2/stm32f2.c' object='stm32f2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stm32f2.obj `if test -f 'stm32f2/stm32f2.c'; then $(CYGPATH_W) 'stm32f2/stm32f2.c'; else $(CYGPATH_W) '$(srcdir)/stm32f2/stm32f2.c'; fi`

stm32l1.o: stm32l1/stm32l1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stm32l1.o -MD -MP -MF $(DEPDIR)/stm32l1.Tpo -c -o stm32l1.o `test -f 'stm32l1/stm32l1.c' || echo '$(srcdir)/'`stm32l1/stm32l1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/stm32l1.Tpo $(DEPDIR)/stm32l1.Po
#	$(AM_V_CC)source='stm32l1/stm32l1.c' object='stm32l1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stm32l1.o `test -f 'stm32l1/stm32l1.c' || echo '$(srcdir)/'`stm32l1/stm32l1.c

stm32l1.obj: stm32l1/stm32l1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stm32l1.obj -MD -MP -MF $(DEPDIR)/stm32l1.Tpo -c -o stm32l1.obj `if test -f 'stm32l1/stm32l1.c'; then $(CYGPATH_W) 'stm32l1/stm32l1.c'; else $(CYGPATH_W) '$(srcdir)/stm32l1/stm32l1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/stm32l1.Tpo $(DEPDIR)/stm32l1.Po
#	$(AM_V_CC)source='stm32l1/stm32l1.c' object='stm32l1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stm32l1.obj `if test -f 'stm32l1/stm32l1.c'; then $(CYGPATH_W) 'stm32l1/stm32l1.c'; else $(CYGPATH_W) '$(srcdir)/stm32l1/stm32l1.c'; fi`

lpc1000.o: lpc1000/lpc1000.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc1000.o -MD -MP -MF $(DEPDIR)/lpc1000.Tpo -c -o lpc1000.o `test -f 'lpc1000/lpc1000.c' || echo '$(srcdir)/'`lpc1000/lpc1000.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lpc1000.Tpo $(DEPDIR)/lpc1000.Po
#	$(AM_V_CC)source='lpc1000/lpc1000.c' object='lpc1000.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc1000.o `test -f 'lpc1000/lpc1000.c' || echo '$(srcdir)/'`lpc1000/lpc1000.c

lpc1000.obj: lpc1000/lpc1000.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc1000.obj -MD -MP -MF $(DEPDIR)/lpc1000.Tpo -c -o lpc1000.obj `if test -f 'lpc1000/lpc1000.c'; then $(CYGPATH_W) 'lpc1000/lpc1000.c'; else $(CYGPATH_W) '$(srcdir)/lpc1000/lpc1000.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lpc1000.Tpo $(DEPDIR)/lpc1000.Po
#	$(AM_V_CC)source='lpc1000/lpc1000.c' object='lpc1000.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc1000.obj `if test -f 'lpc1000/lpc1000.c'; then $(CYGPATH_W) 'lpc1000/lpc1000.c'; else $(CYGPATH_W) '$(srcdir)/lpc1000/lpc1000.c'; fi`

at91sam3.o: at91sam3/at91sam3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT at91sam3.o -MD -MP -MF $(DEPDIR)/at91sam3.Tpo -c -o at91sam3.o `test -f 'at91sam3/at91sam3.c' || echo '$(srcdir)/'`at91sam3/at91sam3.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/at91sam3.Tpo $(DEPDIR)/at91sam3.Po
#	$(AM_V_CC)source='at91sam3/at91sam3.c' object='at91sam3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o at91sam3.o `test -f 'at91sam3/at91sam3.c' || echo '$(srcdir)/'`at91sam3/at91sam3.c

at91sam3.obj: at91sam3/at91sam3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT at91sam3.obj -MD -MP -MF $(DEPDIR)/at91sam3.Tpo -c -o at91sam3.obj `if test -f 'at91sam3/at91sam3.c'; then $(CYGPATH_W) 'at91sam3/at91sam3.c'; else $(CYGPATH_W) '$(srcdir)/at91sam3/at91sam3.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/at91sam3.Tpo $(DEPDIR)/at91sam3.Po
#	$(AM_V_CC)source='at91sam3/at91sam3.c' object='at91sam3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o at91sam3.obj `if test -f 'at91sam3/at91sam3.c'; then $(CYGPATH_W) 'at91sam3/at91sam3.c'; else $(CYGPATH_W) '$(srcdir)/at91sam3/at91sam3.c'; fi`

nuc100.o: nuc100/nuc100.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nuc100.o -MD -MP -MF $(DEPDIR)/nuc100.Tpo -c -o nuc100.o `test -f 'nuc100/nuc100.c' || echo '$(srcdir)/'`nuc100/nuc100.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nuc100.Tpo $(DEPDIR)/nuc100.Po
#	$(AM_V_CC)source='nuc100/nuc100.c' object='nuc100.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nuc100.o `test -f 'nuc100/nuc100.c' || echo '$(srcdir)/'`nuc100/nuc100.c

nuc100.obj: nuc100/nuc100.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nuc100.obj -MD -MP -MF $(DEPDIR)/nuc100.Tpo -c -o nuc100.obj `if test -f 'nuc100/nuc100.c'; then $(CYGPATH_W) 'nuc100/nuc100.c'; else $(CYGPATH_W) '$(srcdir)/nuc100/nuc100.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nuc100.Tpo $(DEPDIR)/nuc100.Po
#	$(AM_V_CC)source='nuc100/nuc100.c' object='nuc100.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nuc100.obj `if test -f 'nuc100/nuc100.c'; then $(CYGPATH_W) 'nuc100/nuc100.c'; else $(CYGPATH_W) '$(srcdir)/nuc100/nuc100.c'; fi`

nuc400.o: nuc400/nuc400.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nuc400.o -MD -MP -MF $(DEPDIR)/nuc400.Tpo -c -o nuc400.o `test -f 'nuc400/nuc400.c' || echo '$(srcdir)/'`nuc400/nuc400.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nuc400.Tpo $(DEPDIR)/nuc400.Po
#	$(AM_V_CC)source='nuc400/nuc400.c' object='nuc400.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nuc400.o `test -f 'nuc400/nuc400.c' || echo '$(srcdir)/'`nuc400/nuc400.c

nuc400.obj: nuc400/nuc400.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nuc400.obj -MD -MP -MF $(DEPDIR)/nuc400.Tpo -c -o nuc400.obj `if test -f 'nuc400/nuc400.c'; then $(CYGPATH_W) 'nuc400/nuc400.c'; else $(CYGPATH_W) '$(srcdir)/nuc400/nuc400.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nuc400.Tpo $(DEPDIR)/nuc400.Po
#	$(AM_V_CC)source='nuc400/nuc400.c' object='nuc400.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nuc400.obj `if test -f 'nuc400/nuc400.c'; then $(CYGPATH_W) 'nuc400/nuc400.c'; else $(CYGPATH_W) '$(srcdir)/nuc400/nuc400.c'; fi`

kinetis.o: kinetis/kinetis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT kinetis.o -MD -MP -MF $(DEPDIR)/kinetis.Tpo -c -o kinetis.o `test -f 'kinetis/kinetis.c' || echo '$(srcdir)/'`kinetis/kinetis.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/kinetis.Tpo $(DEPDIR)/kinetis.Po
#	$(AM_V_CC)source='kinetis/kinetis.c' object='kinetis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o kinetis.o `test -f 'kinetis/kinetis.c' || echo '$(srcdir)/'`kinetis/kinetis.c

kinetis.obj: kinetis/kinetis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT kinetis.obj -MD -MP -MF $(DEPDIR)/kinetis.Tpo -c -o kinetis.obj `if test -f 'kinetis/kinetis.c'; then $(CYGPATH_W) 'kinetis/kinetis.c'; else $(CYGPATH_W) '$(srcdir)/kinetis/kinetis.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kinetis.Tpo $(DEPDIR)/kinetis.Po
#	$(AM_V_CC)source='kinetis/kinetis.c' object='kinetis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o kinetis.obj `if test -f 'kinetis/kinetis.c'; then $(CYGPATH_W) 'kinetis/kinetis.c'; else $(CYGPATH_W) '$(srcdir)/kinetis/kinetis.c'; fi`

avr32.o: avr32/avr32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avr32.o -MD -MP -MF $(DEPDIR)/avr32.Tpo -c -o avr32.o `test -f 'avr32/avr32.c' || echo '$(srcdir)/'`avr32/avr32.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr32.Tpo $(DEPDIR)/avr32.Po
#	$(AM_V_CC)source='avr32/avr32.c' object='avr32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avr32.o `test -f 'avr32/avr32.c' || echo '$(srcdir)/'`avr32/avr32.c

avr32.obj: avr32/avr32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avr32.obj -MD -MP -MF $(DEPDIR)/avr32.Tpo -c -o avr32.obj `if test -f 'avr32/avr32.c'; then $(CYGPATH_W) 'avr32/avr32.c'; else $(CYGPATH_W) '$(srcdir)/avr32/avr32.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr32.Tpo $(DEPDIR)/avr32.Po
#	$(AM_V_CC)source='avr32/avr32.c' object='avr32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avr32.obj `if test -f 'avr32/avr32.c'; then $(CYGPATH_W) 'avr32/avr32.c'; else $(CYGPATH_W) '$(srcdir)/avr32/avr32.c'; fi`

avrxmega.o: avrxmega/avrxmega.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avrxmega.o -MD -MP -MF $(DEPDIR)/avrxmega.Tpo -c -o avrxmega.o `test -f 'avrxmega/avrxmega.c' || echo '$(srcdir)/'`avrxmega/avrxmega.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/avrxmega.Tpo $(DEPDIR)/avrxmega.Po
#	$(AM_V_CC)source='avrxmega/avrxmega.c' object='avrxmega.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avrxmega.o `test -f 'avrxmega/avrxmega.c' || echo '$(srcdir)/'`avrxmega/avrxmega.c

avrxmega.obj: avrxmega/avrxmega.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT avrxmega.obj -MD -MP -MF $(DEPDIR)/avrxmega.Tpo -c -o avrxmega.obj `if test -f 'avrxmega/avrxmega.c'; then $(CYGPATH_W) 'avrxmega/avrxmega.c'; else $(CYGPATH_W) '$(srcdir)/avrxmega/avrxmega.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/avrxmega.Tpo $(DEPDIR)/avrxmega.Po
#	$(AM_V_CC)source='avrxmega/avrxmega.c' object='avrxmega.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o avrxmega.obj `if test -f 'avrxmega/avrxmega.c'; then $(CYGPATH_W) 'avrxmega/avrxmega.c'; else $(CYGPATH_W) '$(srcdir)/avrxmega/avrxmega.c'; fi`

lm3s.o: lm3s/lm3s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lm3s.o -MD -MP -MF $(DEPDIR)/lm3s.Tpo -c -o lm3s.o `test -f 'lm3s/lm3s.c' || echo '$(srcdir)/'`lm3s/lm3s.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lm3s.Tpo $(DEPDIR)/lm3s.Po
#	$(AM_V_CC)source='lm3s/lm3s.c' object='lm3s.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lm3s.o `test -f 'lm3s/lm3s.c' || echo '$(srcdir)/'`lm3s/lm3s.c

lm3s.obj: lm3s/lm3s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lm3s.obj -MD -MP -MF $(DEPDIR)/lm3s.Tpo -c -o lm3s.obj `if test -f 'lm3s/lm3s.c'; then $(CYGPATH_W) 'lm3s/lm3s.c'; else $(CYGPATH_W) '$(srcdir)/lm3s/lm3s.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lm3s.Tpo $(DEPDIR)/lm3s.Po
#	$(AM_V_CC)source='lm3s/lm3s.c' object='lm3s.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lm3s.obj `if test -f 'lm3s/lm3s.c'; then $(CYGPATH_W) 'lm3s/lm3s.c'; else $(CYGPATH_W) '$(srcdir)/lm3s/lm3s.c'; fi`

hcs08.o: hcs08/hcs08.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hcs08.o -MD -MP -MF $(DEPDIR)/hcs08.Tpo -c -o hcs08.o `test -f 'hcs08/hcs08.c' || echo '$(srcdir)/'`hcs08/hcs08.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hcs08.Tpo $(DEPDIR)/hcs08.Po
#	$(AM_V_CC)source='hcs08/hcs08.c' object='hcs08.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hcs08.o `test -f 'hcs08/hcs08.c' || echo '$(srcdir)/'`hcs08/hcs08.c

hcs08.obj: hcs08/hcs08.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hcs08.obj -MD -MP -MF $(DEPDIR)/hcs08.Tpo -c -o hcs08.obj `if test -f 'hcs08/hcs08.c'; then $(CYGPATH_W) 'hcs08/hcs08.c'; else $(CYGPATH_W) '$(srcdir)/hcs08/hcs08.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hcs08.Tpo $(DEPDIR)/hcs08.Po
#	$(AM_V_CC)source='hcs08/hcs08.c' object='hcs08.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hcs08.obj `if test -f 'hcs08/hcs08.c'; then $(CYGPATH_W) 'hcs08/hcs08.c'; else $(CYGPATH_W) '$(srcdir)/hcs08/hcs08.c'; fi`

hcs12.o: hcs12/hcs12.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hcs12.o -MD -MP -MF $(DEPDIR)/hcs12.Tpo -c -o hcs12.o `test -f 'hcs12/hcs12.c' || echo '$(srcdir)/'`hcs12/hcs12.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hcs12.Tpo $(DEPDIR)/hcs12.Po
#	$(AM_V_CC)source='hcs12/hcs12.c' object='hcs12.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hcs12.o `test -f 'hcs12/hcs12.c' || echo '$(srcdir)/'`hcs12/hcs12.c

hcs12.obj: hcs12/hcs12.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hcs12.obj -MD -MP -MF $(DEPDIR)/hcs12.Tpo -c -o hcs12.obj `if test -f 'hcs12/hcs12.c'; then $(CYGPATH_W) 'hcs12/hcs12.c'; else $(CYGPATH_W) '$(srcdir)/hcs12/hcs12.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hcs12.Tpo $(DEPDIR)/hcs12.Po
#	$(AM_V_CC)source='hcs12/hcs12.c' object='hcs12.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hcs12.obj `if test -f 'hcs12/hcs12.c'; then $(CYGPATH_W) 'hcs12/hcs12.c'; else $(CYGPATH_W) '$(srcdir)/hcs12/hcs12.c'; fi`

ee93cx6.o: ee93cx6/ee93cx6.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ee93cx6.o -MD -MP -MF $(DEPDIR)/ee93cx6.Tpo -c -o ee93cx6.o `test -f 'ee93cx6/ee93cx6.c' || echo '$(srcdir)/'`ee93cx6/ee93cx6.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ee93cx6.Tpo $(DEPDIR)/ee93cx6.Po
#	$(AM_V_CC)source='ee93cx6/ee93cx6.c' object='ee93cx6.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ee93cx6.o `test -f 'ee93cx6/ee93cx6.c' || echo '$(srcdir)/'`ee93cx6/ee93cx6.c

ee93cx6.obj: ee93cx6/ee93cx6.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ee93cx6.obj -MD -MP -MF $(DEPDIR)/ee93cx6.Tpo -c -o ee93cx6.obj `if test -f 'ee93cx6/ee93cx6.c'; then $(CYGPATH_W) 'ee93cx6/ee93cx6.c'; else $(CYGPATH_W) '$(srcdir)/ee93cx6/ee93cx6.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ee93cx6.Tpo $(DEPDIR)/ee93cx6.Po
#	$(AM_V_CC)source='ee93cx6/ee93cx6.c' object='ee93cx6.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ee93cx6.obj `if test -f 'ee93cx6/ee93cx6.c'; then $(CYGPATH_W) 'ee93cx6/ee93cx6.c'; else $(CYGPATH_W) '$(srcdir)/ee93cx6/ee93cx6.c'; fi`

ee24cxx.o: ee24cxx/ee24cxx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ee24cxx.o -MD -MP -MF $(DEPDIR)/ee24cxx.Tpo -c -o ee24cxx.o `test -f 'ee24cxx/ee24cxx.c' || echo '$(srcdir)/'`ee24cxx/ee24cxx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ee24cxx.Tpo $(DEPDIR)/ee24cxx.Po
#	$(AM_V_CC)source='ee24cxx/ee24cxx.c' object='ee24cxx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ee24cxx.o `test -f 'ee24cxx/ee24cxx.c' || echo '$(srcdir)/'`ee24cxx/ee24cxx.c

ee24cxx.obj: ee24cxx/ee24cxx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ee24cxx.obj -MD -MP -MF $(DEPDIR)/ee24cxx.Tpo -c -o ee24cxx.obj `if test -f 'ee24cxx/ee24cxx.c'; then $(CYGPATH_W) 'ee24cxx/ee24cxx.c'; else $(CYGPATH_W) '$(srcdir)/ee24cxx/ee24cxx.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ee24cxx.Tpo $(DEPDIR)/ee24cxx.Po
#	$(AM_V_CC)source='ee24cxx/ee24cxx.c' object='ee24cxx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ee24cxx.obj `if test -f 'ee24cxx/ee24cxx.c'; then $(CYGPATH_W) 'ee24cxx/ee24cxx.c'; else $(CYGPATH_W) '$(srcdir)/ee24cxx/ee24cxx.c'; fi`

df25xx.o: df25xx/df25xx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT df25xx.o -MD -MP -MF $(DEPDIR)/df25xx.Tpo -c -o df25xx.o `test -f 'df25xx/df25xx.c' || echo '$(srcdir)/'`df25xx/df25xx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/df25xx.Tpo $(DEPDIR)/df25xx.Po
#	$(AM_V_CC)source='df25xx/df25xx.c' object='df25xx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o df25xx.o `test -f 'df25xx/df25xx.c' || echo '$(srcdir)/'`df25xx/df25xx.c

df25xx.obj: df25xx/df25xx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT df25xx.obj -MD -MP -MF $(DEPDIR)/df25xx.Tpo -c -o df25xx.obj `if test -f 'df25xx/df25xx.c'; then $(CYGPATH_W) 'df25xx/df25xx.c'; else $(CYGPATH_W) '$(srcdir)/df25xx/df25xx.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/df25xx.Tpo $(DEPDIR)/df25xx.Po
#	$(AM_V_CC)source='df25xx/df25xx.c' object='df25xx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o df25xx.obj `if test -f 'df25xx/df25xx.c'; then $(CYGPATH_W) 'df25xx/df25xx.c'; else $(CYGPATH_W) '$(srcdir)/df25xx/df25xx.c'; fi`

sd.o: sd/sd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sd.o -MD -MP -MF $(DEPDIR)/sd.Tpo -c -o sd.o `test -f 'sd/sd.c' || echo '$(srcdir)/'`sd/sd.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sd.Tpo $(DEPDIR)/sd.Po
#	$(AM_V_CC)source='sd/sd.c' object='sd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sd.o `test -f 'sd/sd.c' || echo '$(srcdir)/'`sd/sd.c

sd.obj: sd/sd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sd.obj -MD -MP -MF $(DEPDIR)/sd.Tpo -c -o sd.obj `if test -f 'sd/sd.c'; then $(CYGPATH_W) 'sd/sd.c'; else $(CYGPATH_W) '$(srcdir)/sd/sd.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sd.Tpo $(DEPDIR)/sd.Po
#	$(AM_V_CC)source='sd/sd.c' object='sd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sd.obj `if test -f 'sd/sd.c'; then $(CYGPATH_W) 'sd/sd.c'; else $(CYGPATH_W) '$(srcdir)/sd/sd.c'; fi`

cfi.o: cfi/cfi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cfi.o -MD -MP -MF $(DEPDIR)/cfi.Tpo -c -o cfi.o `test -f 'cfi/cfi.c' || echo '$(srcdir)/'`cfi/cfi.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cfi.Tpo $(DEPDIR)/cfi.Po
#	$(AM_V_CC)source='cfi/cfi.c' object='cfi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cfi.o `test -f 'cfi/cfi.c' || echo '$(srcdir)/'`cfi/cfi.c

cfi.obj: cfi/cfi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cfi.obj -MD -MP -MF $(DEPDIR)/cfi.Tpo -c -o cfi.obj `if test -f 'cfi/cfi.c'; then $(CYGPATH_W) 'cfi/cfi.c'; else $(CYGPATH_W) '$(srcdir)/cfi/cfi.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cfi.Tpo $(DEPDIR)/cfi.Po
#	$(AM_V_CC)source='cfi/cfi.c' object='cfi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cfi.obj `if test -f 'cfi/cfi.c'; then $(CYGPATH_W) 'cfi/cfi.c'; else $(CYGPATH_W) '$(srcdir)/cfi/cfi.c'; fi`

nand.o: nand/nand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nand.o -MD -MP -MF $(DEPDIR)/nand.Tpo -c -o nand.o `test -f 'nand/nand.c' || echo '$(srcdir)/'`nand/nand.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nand.Tpo $(DEPDIR)/nand.Po
#	$(AM_V_CC)source='nand/nand.c' object='nand.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nand.o `test -f 'nand/nand.c' || echo '$(srcdir)/'`nand/nand.c

nand.obj: nand/nand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nand.obj -MD -MP -MF $(DEPDIR)/nand.Tpo -c -o nand.obj `if test -f 'nand/nand.c'; then $(CYGPATH_W) 'nand/nand.c'; else $(CYGPATH_W) '$(srcdir)/nand/nand.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nand.Tpo $(DEPDIR)/nand.Po
#	$(AM_V_CC)source='nand/nand.c' object='nand.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nand.obj `if test -f 'nand/nand.c'; then $(CYGPATH_W) 'nand/nand.c'; else $(CYGPATH_W) '$(srcdir)/nand/nand.c'; fi`

sst32hfxx.o: sst32hfxx/sst32hfxx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sst32hfxx.o -MD -MP -MF $(DEPDIR)/sst32hfxx.Tpo -c -o sst32hfxx.o `test -f 'sst32hfxx/sst32hfxx.c' || echo '$(srcdir)/'`sst32hfxx/sst32hfxx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sst32hfxx.Tpo $(DEPDIR)/sst32hfxx.Po
#	$(AM_V_CC)source='sst32hfxx/sst32hfxx.c' object='sst32hfxx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sst32hfxx.o `test -f 'sst32hfxx/sst32hfxx.c' || echo '$(srcdir)/'`sst32hfxx/sst32hfxx.c

sst32hfxx.obj: sst32hfxx/sst32hfxx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sst32hfxx.obj -MD -MP -MF $(DEPDIR)/sst32hfxx.Tpo -c -o sst32hfxx.obj `if test -f 'sst32hfxx/sst32hfxx.c'; then $(CYGPATH_W) 'sst32hfxx/sst32hfxx.c'; else $(CYGPATH_W) '$(srcdir)/sst32hfxx/sst32hfxx.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sst32hfxx.Tpo $(DEPDIR)/sst32hfxx.Po
#	$(AM_V_CC)source='sst32hfxx/sst32hfxx.c' object='sst32hfxx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sst32hfxx.obj `if test -f 'sst32hfxx/sst32hfxx.c'; then $(CYGPATH_W) 'sst32hfxx/sst32hfxx.c'; else $(CYGPATH_W) '$(srcdir)/sst32hfxx/sst32hfxx.c'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/JTAGfunc.Po
	-rm -f ./$(DEPDIR)/adi_v5p1.Po
	-rm -f ./$(DEPDIR)/at89s5x.Po
	-rm -f ./$(DEPDIR)/at91sam3.Po
	-rm -f ./$(DEPDIR)/avr32.Po
	-rm -f ./$(DEPDIR)/avr8.Po
	-rm -f ./$(DEPDIR)/avr8_hvpp.Po
	-rm -f ./$(DEPDIR)/avr8_hvsp.Po
	-rm -f ./$(DEPDIR)/avr8_isp.Po
	-rm -f ./$(DEPDIR)/avr8_jtag.Po
	-rm -f ./$(DEPDIR)/avrxmega.Po
	-rm -f ./$(DEPDIR)/byte_tap.Po
	-rm -f ./$(DEPDIR)/c8051f.Po
	-rm -f ./$(DEPDIR)/c8051f_c2.Po
	-rm -f ./$(DEPDIR)/c8051f_jtag.Po
	-rm -f ./$(DEPDIR)/cfi.Po
	-rm -f ./$(DEPDIR)/cm.Po
	-rm -f ./$(DEPDIR)/cm_at91sam3.Po
	-rm -f ./$(DEPDIR)/cm_common.Po
	-rm -f ./$(DEPDIR)/cm_kinetis.Po
	-rm -f ./$(DEPDIR)/cm_lm3s.Po
	-rm -f ./$(DEPDIR)/cm_lpc1000.Po
	-rm -f ./$(DEPDIR)/cm_nuc100.Po
	-rm -f ./$(DEPDIR)/cm_nuc400.Po
	-rm -f ./$(DEPDIR)/cm_stm32_fl.Po
	-rm -f ./$(DEPDIR)/cm_stm32f1.Po
	-rm -f ./$(DEPDIR)/cm_stm32f2.Po
	-rm -f ./$(DEPDIR)/cm_stm32l1.Po
	-rm -f ./$(DEPDIR)/comisp.Po
	-rm -f ./$(DEPDIR)/df25xx.Po
	-rm -f ./$(DEPDIR)/ee24cxx.Po
	-rm -f ./$(DEPDIR)/ee93cx6.Po
	-rm -f ./$(DEPDIR)/hcs08.Po
	-rm -f ./$(DEPDIR)/hcs12.Po
	-rm -f ./$(DEPDIR)/kinetis.Po
	-rm -f ./$(DEPDIR)/lm3s.Po
	-rm -f ./$(DEPDIR)/lpc1000.Po
	-rm -f ./$(DEPDIR)/lpc900.Po
	-rm -f ./$(DEPDIR)/lpcarmisp.Po
	-rm -f ./$(DEPDIR)/msp430.Po
	-rm -f ./$(DEPDIR)/msp430_bsl.Po
	-rm -f ./$(DEPDIR)/msp430_jtagsbw.Po
	-rm -f ./$(DEPDIR)/nand.Po
	-rm -f ./$(DEPDIR)/nuc100.Po
	-rm -f ./$(DEPDIR)/nuc400.Po
	-rm -f ./$(DEPDIR)/psoc1.Po
	-rm -f ./$(DEPDIR)/sd.Po
	-rm -f ./$(DEPDIR)/sst32hfxx.Po
	-rm -f ./$(DEPDIR)/stm32f1.Po
	-rm -f ./$(DEPDIR)/stm32f2.Po
	-rm -f ./$(DEPDIR)/stm32isp.Po
	-rm -f ./$(DEPDIR)/stm32l1.Po
	-rm -f ./$(DEPDIR)/stm8.Po
	-rm -f ./$(DEPDIR)/svf_parser.Po
	-rm -f ./$(DEPDIR)/svf_player.Po
	-rm -f ./$(DEPDIR)/target.Po
	-rm -f ./$(DEPDIR)/target_conf.Po
	-rm -f ./$(DEPDIR)/target_data.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/JTAGfunc.Po
	-rm -f ./$(DEPDIR)/adi_v5p1.Po
	-rm -f ./$(DEPDIR)/at89s5x.Po
	-rm -f ./$(DEPDIR)/at91sam3.Po
	-rm -f ./$(DEPDIR)/avr32.Po
	-rm -f ./$(DEPDIR)/avr8.Po
	-rm -f ./$(DEPDIR)/avr8_hvpp.Po
	-rm -f ./$(DEPDIR)/avr8_hvsp.Po
	-rm -f ./$(DEPDIR)/avr8_isp.Po
	-rm -f ./$(DEPDIR)/avr8_jtag.Po
	-rm -f ./$(DEPDIR)/avrxmega.Po
	-rm -f ./$(DEPDIR)/byte_tap.Po
	-rm -f ./$(DEPDIR)/c8051f.Po
	-rm -f ./$(DEPDIR)/c8051f_c2.Po
	-rm -f ./$(DEPDIR)/c8051f_jtag.Po
	-rm -f ./$(DEPDIR)/cfi.Po
	-rm -f ./$(DEPDIR)/cm.Po
	-rm -f ./$(DEPDIR)/cm_at91sam3.Po
	-rm -f ./$(DEPDIR)/cm_common.Po
	-rm -f ./$(DEPDIR)/cm_kinetis.Po
	-rm -f ./$(DEPDIR)/cm_lm3s.Po
	-rm -f ./$(DEPDIR)/cm_lpc1000.Po
	-rm -f ./$(DEPDIR)/cm_nuc100.Po
	-rm -f ./$(DEPDIR)/cm_nuc400.Po
	-rm -f ./$(DEPDIR)/cm_stm32_fl.Po
	-rm -f ./$(DEPDIR)/cm_stm32f1.Po
	-rm -f ./$(DEPDIR)/cm_stm32f2.Po
	-rm -f ./$(DEPDIR)/cm_stm32l1.Po
	-rm -f ./$(DEPDIR)/comisp.Po
	-rm -f ./$(DEPDIR)/df25xx.Po
	-rm -f ./$(DEPDIR)/ee24cxx.Po
	-rm -f ./$(DEPDIR)/ee93cx6.Po
	-rm -f ./$(DEPDIR)/hcs08.Po
	-rm -f ./$(DEPDIR)/hcs12.Po
	-rm -f ./$(DEPDIR)/kinetis.Po
	-rm -f ./$(DEPDIR)/lm3s.Po
	-rm -f ./$(DEPDIR)/lpc1000.Po
	-rm -f ./$(DEPDIR)/lpc900.Po
	-rm -f ./$(DEPDIR)/lpcarmisp.Po
	-rm -f ./$(DEPDIR)/msp430.Po
	-rm -f ./$(DEPDIR)/msp430_bsl.Po
	-rm -f ./$(DEPDIR)/msp430_jtagsbw.Po
	-rm -f ./$(DEPDIR)/nand.Po
	-rm -f ./$(DEPDIR)/nuc100.Po
	-rm -f ./$(DEPDIR)/nuc400.Po
	-rm -f ./$(DEPDIR)/psoc1.Po
	-rm -f ./$(DEPDIR)/sd.Po
	-rm -f ./$(DEPDIR)/sst32hfxx.Po
	-rm -f ./$(DEPDIR)/stm32f1.Po
	-rm -f ./$(DEPDIR)/stm32f2.Po
	-rm -f ./$(DEPDIR)/stm32isp.Po
	-rm -f ./$(DEPDIR)/stm32l1.Po
	-rm -f ./$(DEPDIR)/stm8.Po
	-rm -f ./$(DEPDIR)/svf_parser.Po
	-rm -f ./$(DEPDIR)/svf_player.Po
	-rm -f ./$(DEPDIR)/target.Po
	-rm -f ./$(DEPDIR)/target_conf.Po
	-rm -f ./$(DEPDIR)/target_data.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-noinstLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
